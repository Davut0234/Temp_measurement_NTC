
IndustryDesign.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000014f4  00001588  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  0080012a  0080012a  000015b2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015b2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001610  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00001650  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000185e  00000000  00000000  000017b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d5d  00000000  00000000  0000300e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aa2  00000000  00000000  00003d6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000354  00000000  00000000  00004810  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000843  00000000  00000000  00004b64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d29  00000000  00000000  000053a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  000060d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 ef       	ldi	r30, 0xF4	; 244
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 32       	cpi	r26, 0x2A	; 42
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	aa e2       	ldi	r26, 0x2A	; 42
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a4 34       	cpi	r26, 0x44	; 68
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 1a 01 	call	0x234	; 0x234 <main>
      9e:	0c 94 78 0a 	jmp	0x14f0	; 0x14f0 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
      a6:	80 ec       	ldi	r24, 0xC0	; 192
      a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
      ac:	ea e7       	ldi	r30, 0x7A	; 122
      ae:	f0 e0       	ldi	r31, 0x00	; 0
      b0:	80 81       	ld	r24, Z
      b2:	84 68       	ori	r24, 0x84	; 132
      b4:	80 83       	st	Z, r24
      b6:	08 95       	ret

000000b8 <adc_read>:
      b8:	ec e7       	ldi	r30, 0x7C	; 124
      ba:	f0 e0       	ldi	r31, 0x00	; 0
      bc:	90 81       	ld	r25, Z
      be:	90 7f       	andi	r25, 0xF0	; 240
      c0:	90 83       	st	Z, r25
      c2:	90 81       	ld	r25, Z
      c4:	89 2b       	or	r24, r25
      c6:	80 83       	st	Z, r24
      c8:	ea e7       	ldi	r30, 0x7A	; 122
      ca:	f0 e0       	ldi	r31, 0x00	; 0
      cc:	80 81       	ld	r24, Z
      ce:	80 64       	ori	r24, 0x40	; 64
      d0:	80 83       	st	Z, r24
      d2:	80 81       	ld	r24, Z
      d4:	84 ff       	sbrs	r24, 4
      d6:	fd cf       	rjmp	.-6      	; 0xd2 <adc_read+0x1a>
      d8:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
      dc:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	98 2f       	mov	r25, r24
      e4:	88 27       	eor	r24, r24
      e6:	82 0f       	add	r24, r18
      e8:	91 1d       	adc	r25, r1
      ea:	08 95       	ret

000000ec <gpio_set_direction>:
      ec:	61 11       	cpse	r22, r1
      ee:	13 c0       	rjmp	.+38     	; 0x116 <gpio_set_direction+0x2a>
      f0:	dc 01       	movw	r26, r24
      f2:	ed 91       	ld	r30, X+
      f4:	fc 91       	ld	r31, X
      f6:	11 97       	sbiw	r26, 0x01	; 1
      f8:	21 e0       	ldi	r18, 0x01	; 1
      fa:	30 e0       	ldi	r19, 0x00	; 0
      fc:	a9 01       	movw	r20, r18
      fe:	12 96       	adiw	r26, 0x02	; 2
     100:	0c 90       	ld	r0, X
     102:	02 c0       	rjmp	.+4      	; 0x108 <gpio_set_direction+0x1c>
     104:	44 0f       	add	r20, r20
     106:	55 1f       	adc	r21, r21
     108:	0a 94       	dec	r0
     10a:	e2 f7       	brpl	.-8      	; 0x104 <gpio_set_direction+0x18>
     10c:	ca 01       	movw	r24, r20
     10e:	91 81       	ldd	r25, Z+1	; 0x01
     110:	89 2b       	or	r24, r25
     112:	81 83       	std	Z+1, r24	; 0x01
     114:	08 95       	ret
     116:	61 30       	cpi	r22, 0x01	; 1
     118:	99 f4       	brne	.+38     	; 0x140 <gpio_set_direction+0x54>
     11a:	dc 01       	movw	r26, r24
     11c:	ed 91       	ld	r30, X+
     11e:	fc 91       	ld	r31, X
     120:	11 97       	sbiw	r26, 0x01	; 1
     122:	21 e0       	ldi	r18, 0x01	; 1
     124:	30 e0       	ldi	r19, 0x00	; 0
     126:	a9 01       	movw	r20, r18
     128:	12 96       	adiw	r26, 0x02	; 2
     12a:	0c 90       	ld	r0, X
     12c:	02 c0       	rjmp	.+4      	; 0x132 <gpio_set_direction+0x46>
     12e:	44 0f       	add	r20, r20
     130:	55 1f       	adc	r21, r21
     132:	0a 94       	dec	r0
     134:	e2 f7       	brpl	.-8      	; 0x12e <gpio_set_direction+0x42>
     136:	ca 01       	movw	r24, r20
     138:	80 95       	com	r24
     13a:	91 81       	ldd	r25, Z+1	; 0x01
     13c:	89 23       	and	r24, r25
     13e:	81 83       	std	Z+1, r24	; 0x01
     140:	08 95       	ret

00000142 <gpio_set>:
     142:	61 30       	cpi	r22, 0x01	; 1
     144:	99 f4       	brne	.+38     	; 0x16c <gpio_set+0x2a>
     146:	dc 01       	movw	r26, r24
     148:	ed 91       	ld	r30, X+
     14a:	fc 91       	ld	r31, X
     14c:	11 97       	sbiw	r26, 0x01	; 1
     14e:	21 e0       	ldi	r18, 0x01	; 1
     150:	30 e0       	ldi	r19, 0x00	; 0
     152:	a9 01       	movw	r20, r18
     154:	12 96       	adiw	r26, 0x02	; 2
     156:	0c 90       	ld	r0, X
     158:	02 c0       	rjmp	.+4      	; 0x15e <gpio_set+0x1c>
     15a:	44 0f       	add	r20, r20
     15c:	55 1f       	adc	r21, r21
     15e:	0a 94       	dec	r0
     160:	e2 f7       	brpl	.-8      	; 0x15a <gpio_set+0x18>
     162:	ca 01       	movw	r24, r20
     164:	92 81       	ldd	r25, Z+2	; 0x02
     166:	89 2b       	or	r24, r25
     168:	82 83       	std	Z+2, r24	; 0x02
     16a:	08 95       	ret
     16c:	61 11       	cpse	r22, r1
     16e:	14 c0       	rjmp	.+40     	; 0x198 <gpio_set+0x56>
     170:	dc 01       	movw	r26, r24
     172:	ed 91       	ld	r30, X+
     174:	fc 91       	ld	r31, X
     176:	11 97       	sbiw	r26, 0x01	; 1
     178:	21 e0       	ldi	r18, 0x01	; 1
     17a:	30 e0       	ldi	r19, 0x00	; 0
     17c:	a9 01       	movw	r20, r18
     17e:	12 96       	adiw	r26, 0x02	; 2
     180:	0c 90       	ld	r0, X
     182:	02 c0       	rjmp	.+4      	; 0x188 <gpio_set+0x46>
     184:	44 0f       	add	r20, r20
     186:	55 1f       	adc	r21, r21
     188:	0a 94       	dec	r0
     18a:	e2 f7       	brpl	.-8      	; 0x184 <gpio_set+0x42>
     18c:	ca 01       	movw	r24, r20
     18e:	80 95       	com	r24
     190:	92 81       	ldd	r25, Z+2	; 0x02
     192:	89 23       	and	r24, r25
     194:	82 83       	std	Z+2, r24	; 0x02
     196:	08 95       	ret
     198:	62 30       	cpi	r22, 0x02	; 2
     19a:	91 f4       	brne	.+36     	; 0x1c0 <gpio_set+0x7e>
     19c:	dc 01       	movw	r26, r24
     19e:	ed 91       	ld	r30, X+
     1a0:	fc 91       	ld	r31, X
     1a2:	11 97       	sbiw	r26, 0x01	; 1
     1a4:	21 e0       	ldi	r18, 0x01	; 1
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	a9 01       	movw	r20, r18
     1aa:	12 96       	adiw	r26, 0x02	; 2
     1ac:	0c 90       	ld	r0, X
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <gpio_set+0x72>
     1b0:	44 0f       	add	r20, r20
     1b2:	55 1f       	adc	r21, r21
     1b4:	0a 94       	dec	r0
     1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <gpio_set+0x6e>
     1b8:	ca 01       	movw	r24, r20
     1ba:	92 81       	ldd	r25, Z+2	; 0x02
     1bc:	89 27       	eor	r24, r25
     1be:	82 83       	std	Z+2, r24	; 0x02
     1c0:	08 95       	ret

000001c2 <mean>:
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}


uint16_t mean(uint16_t * values, uint8_t length)
{
     1c2:	1f 93       	push	r17
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	16 2f       	mov	r17, r22
	uint16_t min = *values;
     1ca:	fc 01       	movw	r30, r24
     1cc:	c1 91       	ld	r28, Z+
     1ce:	d1 91       	ld	r29, Z+
	uint16_t max = *values;
	uint32_t sum = *values;
     1d0:	ae 01       	movw	r20, r28
     1d2:	60 e0       	ldi	r22, 0x00	; 0
     1d4:	70 e0       	ldi	r23, 0x00	; 0
	uint8_t i;
	values++;
	
	for (i = 1; i < length; i++)
     1d6:	12 30       	cpi	r17, 0x02	; 2
     1d8:	a8 f0       	brcs	.+42     	; 0x204 <mean+0x42>
     1da:	de 01       	movw	r26, r28
     1dc:	81 e0       	ldi	r24, 0x01	; 1
	{
		if(*values < min)
     1de:	20 81       	ld	r18, Z
     1e0:	31 81       	ldd	r19, Z+1	; 0x01
     1e2:	2c 17       	cp	r18, r28
     1e4:	3d 07       	cpc	r19, r29
     1e6:	08 f4       	brcc	.+2      	; 0x1ea <mean+0x28>
     1e8:	e9 01       	movw	r28, r18
     1ea:	a2 17       	cp	r26, r18
     1ec:	b3 07       	cpc	r27, r19
     1ee:	08 f4       	brcc	.+2      	; 0x1f2 <mean+0x30>
     1f0:	d9 01       	movw	r26, r18
		}
		if(*values > max)
		{
			max = *values;
		}
		sum += *values;
     1f2:	42 0f       	add	r20, r18
     1f4:	53 1f       	adc	r21, r19
     1f6:	61 1d       	adc	r22, r1
     1f8:	71 1d       	adc	r23, r1
		values++;
     1fa:	32 96       	adiw	r30, 0x02	; 2
	uint16_t max = *values;
	uint32_t sum = *values;
	uint8_t i;
	values++;
	
	for (i = 1; i < length; i++)
     1fc:	8f 5f       	subi	r24, 0xFF	; 255
     1fe:	18 13       	cpse	r17, r24
     200:	ee cf       	rjmp	.-36     	; 0x1de <mean+0x1c>
     202:	01 c0       	rjmp	.+2      	; 0x206 <mean+0x44>


uint16_t mean(uint16_t * values, uint8_t length)
{
	uint16_t min = *values;
	uint16_t max = *values;
     204:	de 01       	movw	r26, r28
			max = *values;
		}
		sum += *values;
		values++;
	}
	sum -= (min + max);
     206:	ac 0f       	add	r26, r28
     208:	bd 1f       	adc	r27, r29
     20a:	cb 01       	movw	r24, r22
     20c:	ba 01       	movw	r22, r20
     20e:	6a 1b       	sub	r22, r26
     210:	7b 0b       	sbc	r23, r27
     212:	81 09       	sbc	r24, r1
     214:	91 09       	sbc	r25, r1
	sum /= (length - 2);
	return sum;
     216:	21 2f       	mov	r18, r17
     218:	30 e0       	ldi	r19, 0x00	; 0
     21a:	22 50       	subi	r18, 0x02	; 2
     21c:	31 09       	sbc	r19, r1
     21e:	03 2e       	mov	r0, r19
     220:	00 0c       	add	r0, r0
     222:	44 0b       	sbc	r20, r20
     224:	55 0b       	sbc	r21, r21
     226:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__udivmodsi4>
}
     22a:	c9 01       	movw	r24, r18
     22c:	df 91       	pop	r29
     22e:	cf 91       	pop	r28
     230:	1f 91       	pop	r17
     232:	08 95       	ret

00000234 <main>:

int main(void)
{
     234:	cf 93       	push	r28
     236:	df 93       	push	r29
     238:	cd b7       	in	r28, 0x3d	; 61
     23a:	de b7       	in	r29, 0x3e	; 62
     23c:	a2 97       	sbiw	r28, 0x22	; 34
     23e:	0f b6       	in	r0, 0x3f	; 63
     240:	f8 94       	cli
     242:	de bf       	out	0x3e, r29	; 62
     244:	0f be       	out	0x3f, r0	; 63
     246:	cd bf       	out	0x3d, r28	; 61
	gpio_set_direction(&red_led, GPIO_DIR_OUTPUT);
     248:	60 e0       	ldi	r22, 0x00	; 0
     24a:	83 e0       	ldi	r24, 0x03	; 3
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	0e 94 76 00 	call	0xec	; 0xec <gpio_set_direction>
	timer_init();
     252:	0e 94 a1 03 	call	0x742	; 0x742 <timer_init>
	adc_init();
     256:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
	uart_init(9600);
     25a:	60 e8       	ldi	r22, 0x80	; 128
     25c:	75 e2       	ldi	r23, 0x25	; 37
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	0e 94 c3 03 	call	0x786	; 0x786 <uart_init>
	spi_init();
     266:	0e 94 68 03 	call	0x6d0	; 0x6d0 <spi_init>
	max7219_init(&max7219_cs);
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	91 e0       	ldi	r25, 0x01	; 1
     26e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <max7219_init>
	max7219_write_dot(2, 1);
     272:	61 e0       	ldi	r22, 0x01	; 1
     274:	82 e0       	ldi	r24, 0x02	; 2
     276:	0e 94 46 03 	call	0x68c	; 0x68c <max7219_write_dot>
	max7219_write_dot(4, 1);
     27a:	61 e0       	ldi	r22, 0x01	; 1
     27c:	84 e0       	ldi	r24, 0x04	; 4
     27e:	0e 94 46 03 	call	0x68c	; 0x68c <max7219_write_dot>
	max7219_inital();
     282:	0e 94 58 03 	call	0x6b0	; 0x6b0 <max7219_inital>
	sei();
     286:	78 94       	sei
     288:	6e 01       	movw	r12, r28
     28a:	23 e2       	ldi	r18, 0x23	; 35
     28c:	c2 0e       	add	r12, r18
     28e:	d1 1c       	adc	r13, r1
			
			max7219_update();
			
			
			char uart_buffer[24];
			uint8_t msg_len = sprintf(uart_buffer, "V:%02u.%01u	A:%01u.%02u\r\n",
     290:	0f 2e       	mov	r0, r31
     292:	f4 e6       	ldi	r31, 0x64	; 100
     294:	3f 2e       	mov	r3, r31
     296:	f0 2d       	mov	r31, r0
	
	while (1)
	{
		static uint32_t led_time;
		
		if(TIMER_CHECK_COUNTER(led_time, SEC(1)))
     298:	0e 94 ba 03 	call	0x774	; 0x774 <timer_get_count>
     29c:	00 91 2e 01 	lds	r16, 0x012E	; 0x80012e <led_time.1888>
     2a0:	10 91 2f 01 	lds	r17, 0x012F	; 0x80012f <led_time.1888+0x1>
     2a4:	20 91 30 01 	lds	r18, 0x0130	; 0x800130 <led_time.1888+0x2>
     2a8:	30 91 31 01 	lds	r19, 0x0131	; 0x800131 <led_time.1888+0x3>
     2ac:	dc 01       	movw	r26, r24
     2ae:	cb 01       	movw	r24, r22
     2b0:	80 1b       	sub	r24, r16
     2b2:	91 0b       	sbc	r25, r17
     2b4:	a2 0b       	sbc	r26, r18
     2b6:	b3 0b       	sbc	r27, r19
     2b8:	88 3e       	cpi	r24, 0xE8	; 232
     2ba:	93 40       	sbci	r25, 0x03	; 3
     2bc:	a1 05       	cpc	r26, r1
     2be:	b1 05       	cpc	r27, r1
     2c0:	78 f0       	brcs	.+30     	; 0x2e0 <main+0xac>
		{
			gpio_set(&red_led, GPIO_TOGGLE);
     2c2:	62 e0       	ldi	r22, 0x02	; 2
     2c4:	83 e0       	ldi	r24, 0x03	; 3
     2c6:	91 e0       	ldi	r25, 0x01	; 1
     2c8:	0e 94 a1 00 	call	0x142	; 0x142 <gpio_set>
			led_time = TIMER_COUNTER;
     2cc:	0e 94 ba 03 	call	0x774	; 0x774 <timer_get_count>
     2d0:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <led_time.1888>
     2d4:	70 93 2f 01 	sts	0x012F, r23	; 0x80012f <led_time.1888+0x1>
     2d8:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <led_time.1888+0x2>
     2dc:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <led_time.1888+0x3>
		}
		static uint32_t screen_time;
		if(TIMER_CHECK_COUNTER(screen_time, MS(100)))
     2e0:	0e 94 ba 03 	call	0x774	; 0x774 <timer_get_count>
     2e4:	00 91 2a 01 	lds	r16, 0x012A	; 0x80012a <__data_end>
     2e8:	10 91 2b 01 	lds	r17, 0x012B	; 0x80012b <__data_end+0x1>
     2ec:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <__data_end+0x2>
     2f0:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <__data_end+0x3>
     2f4:	dc 01       	movw	r26, r24
     2f6:	cb 01       	movw	r24, r22
     2f8:	80 1b       	sub	r24, r16
     2fa:	91 0b       	sbc	r25, r17
     2fc:	a2 0b       	sbc	r26, r18
     2fe:	b3 0b       	sbc	r27, r19
     300:	84 36       	cpi	r24, 0x64	; 100
     302:	91 05       	cpc	r25, r1
     304:	a1 05       	cpc	r26, r1
     306:	b1 05       	cpc	r27, r1
     308:	38 f2       	brcs	.-114    	; 0x298 <main+0x64>
		{
			screen_time = TIMER_COUNTER;
     30a:	0e 94 ba 03 	call	0x774	; 0x774 <timer_get_count>
     30e:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <__data_end>
     312:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <__data_end+0x1>
     316:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end+0x2>
     31a:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__data_end+0x3>
     31e:	8e 01       	movw	r16, r28
     320:	07 5e       	subi	r16, 0xE7	; 231
     322:	1f 4f       	sbci	r17, 0xFF	; 255
     324:	78 01       	movw	r14, r16
			uint16_t adc_raw[ADC_MEAN_COUNT];
			uint8_t i;
			uint8_t mean_count = sizeof(adc_raw) / sizeof(uint16_t);
			for (i = 0; i < mean_count; i++)
			{
				adc_raw[i] = adc_read(ADC_VOLTAGE_CH);
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	0e 94 5c 00 	call	0xb8	; 0xb8 <adc_read>
     32c:	f7 01       	movw	r30, r14
     32e:	81 93       	st	Z+, r24
     330:	91 93       	st	Z+, r25
     332:	7f 01       	movw	r14, r30
		{
			screen_time = TIMER_COUNTER;
			uint16_t adc_raw[ADC_MEAN_COUNT];
			uint8_t i;
			uint8_t mean_count = sizeof(adc_raw) / sizeof(uint16_t);
			for (i = 0; i < mean_count; i++)
     334:	ec 15       	cp	r30, r12
     336:	fd 05       	cpc	r31, r13
     338:	b1 f7       	brne	.-20     	; 0x326 <main+0xf2>
			{
				adc_raw[i] = adc_read(ADC_VOLTAGE_CH);
			}
			uint16_t voltage = map(mean(adc_raw, mean_count), 0, 1023, 0, 350);
     33a:	65 e0       	ldi	r22, 0x05	; 5
     33c:	ce 01       	movw	r24, r28
     33e:	49 96       	adiw	r24, 0x19	; 25
     340:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <mean>
gpio_t red_led = {(gpio_regs_t *)&PINB, 0};
gpio_t max7219_cs = {(gpio_regs_t *)&PINB, 2};

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
     344:	9c 01       	movw	r18, r24
     346:	ae e5       	ldi	r26, 0x5E	; 94
     348:	b1 e0       	ldi	r27, 0x01	; 1
     34a:	0e 94 7f 07 	call	0xefe	; 0xefe <__umulhisi3>
     34e:	2f ef       	ldi	r18, 0xFF	; 255
     350:	33 e0       	ldi	r19, 0x03	; 3
     352:	40 e0       	ldi	r20, 0x00	; 0
     354:	50 e0       	ldi	r21, 0x00	; 0
     356:	0e 94 60 07 	call	0xec0	; 0xec0 <__divmodsi4>
     35a:	29 01       	movw	r4, r18
     35c:	3a 01       	movw	r6, r20
			}
			uint16_t voltage = map(mean(adc_raw, mean_count), 0, 1023, 0, 350);
			
			for (i = 0; i < mean_count; i++)
			{
				adc_raw[i] = adc_read(ADC_CURRENT_CH);
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	0e 94 5c 00 	call	0xb8	; 0xb8 <adc_read>
     364:	f8 01       	movw	r30, r16
     366:	81 93       	st	Z+, r24
     368:	91 93       	st	Z+, r25
     36a:	8f 01       	movw	r16, r30
			{
				adc_raw[i] = adc_read(ADC_VOLTAGE_CH);
			}
			uint16_t voltage = map(mean(adc_raw, mean_count), 0, 1023, 0, 350);
			
			for (i = 0; i < mean_count; i++)
     36c:	ec 15       	cp	r30, r12
     36e:	fd 05       	cpc	r31, r13
     370:	b1 f7       	brne	.-20     	; 0x35e <main+0x12a>
			{
				adc_raw[i] = adc_read(ADC_CURRENT_CH);
			}
			uint16_t current = map(mean(adc_raw, mean_count), 0, 1023, 0, 500);
     372:	65 e0       	ldi	r22, 0x05	; 5
     374:	ce 01       	movw	r24, r28
     376:	49 96       	adiw	r24, 0x19	; 25
     378:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <mean>
gpio_t red_led = {(gpio_regs_t *)&PINB, 0};
gpio_t max7219_cs = {(gpio_regs_t *)&PINB, 2};

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
     37c:	9c 01       	movw	r18, r24
     37e:	a4 ef       	ldi	r26, 0xF4	; 244
     380:	b1 e0       	ldi	r27, 0x01	; 1
     382:	0e 94 7f 07 	call	0xefe	; 0xefe <__umulhisi3>
     386:	2f ef       	ldi	r18, 0xFF	; 255
     388:	33 e0       	ldi	r19, 0x03	; 3
     38a:	40 e0       	ldi	r20, 0x00	; 0
     38c:	50 e0       	ldi	r21, 0x00	; 0
     38e:	0e 94 60 07 	call	0xec0	; 0xec0 <__divmodsi4>
     392:	49 01       	movw	r8, r18
     394:	5a 01       	movw	r10, r20
			{
				adc_raw[i] = adc_read(ADC_CURRENT_CH);
			}
			uint16_t current = map(mean(adc_raw, mean_count), 0, 1023, 0, 500);
			
			max7219_clear(3, 3);
     396:	63 e0       	ldi	r22, 0x03	; 3
     398:	83 e0       	ldi	r24, 0x03	; 3
     39a:	0e 94 2d 03 	call	0x65a	; 0x65a <max7219_clear>
			
			max7219_write_number(3, voltage);
     39e:	b3 01       	movw	r22, r6
     3a0:	a2 01       	movw	r20, r4
     3a2:	66 27       	eor	r22, r22
     3a4:	77 27       	eor	r23, r23
     3a6:	83 e0       	ldi	r24, 0x03	; 3
     3a8:	0e 94 67 02 	call	0x4ce	; 0x4ce <max7219_write_number>
			max7219_inital();
     3ac:	0e 94 58 03 	call	0x6b0	; 0x6b0 <max7219_inital>
			
			
			
			
			
			max7219_clear(0, 3);
     3b0:	63 e0       	ldi	r22, 0x03	; 3
     3b2:	80 e0       	ldi	r24, 0x00	; 0
     3b4:	0e 94 2d 03 	call	0x65a	; 0x65a <max7219_clear>
			
			max7219_write_number(0, current);
     3b8:	b5 01       	movw	r22, r10
     3ba:	a4 01       	movw	r20, r8
     3bc:	66 27       	eor	r22, r22
     3be:	77 27       	eor	r23, r23
     3c0:	80 e0       	ldi	r24, 0x00	; 0
     3c2:	0e 94 67 02 	call	0x4ce	; 0x4ce <max7219_write_number>
			max7219_write_dot(2,1);
     3c6:	61 e0       	ldi	r22, 0x01	; 1
     3c8:	82 e0       	ldi	r24, 0x02	; 2
     3ca:	0e 94 46 03 	call	0x68c	; 0x68c <max7219_write_dot>
			max7219_write_dot(4,1);
     3ce:	61 e0       	ldi	r22, 0x01	; 1
     3d0:	84 e0       	ldi	r24, 0x04	; 4
     3d2:	0e 94 46 03 	call	0x68c	; 0x68c <max7219_write_dot>
			max7219_inital();
     3d6:	0e 94 58 03 	call	0x6b0	; 0x6b0 <max7219_inital>
			max7219_update();
     3da:	0e 94 1a 03 	call	0x634	; 0x634 <max7219_update>
			
			
			max7219_update();
     3de:	0e 94 1a 03 	call	0x634	; 0x634 <max7219_update>
			
			
			char uart_buffer[24];
			uint8_t msg_len = sprintf(uart_buffer, "V:%02u.%01u	A:%01u.%02u\r\n",
     3e2:	a4 01       	movw	r20, r8
     3e4:	56 95       	lsr	r21
     3e6:	47 95       	ror	r20
     3e8:	56 95       	lsr	r21
     3ea:	47 95       	ror	r20
     3ec:	9a 01       	movw	r18, r20
     3ee:	ab e7       	ldi	r26, 0x7B	; 123
     3f0:	b4 e1       	ldi	r27, 0x14	; 20
     3f2:	0e 94 7f 07 	call	0xefe	; 0xefe <__umulhisi3>
     3f6:	96 95       	lsr	r25
     3f8:	87 95       	ror	r24
     3fa:	38 9e       	mul	r3, r24
     3fc:	90 01       	movw	r18, r0
     3fe:	39 9e       	mul	r3, r25
     400:	30 0d       	add	r19, r0
     402:	11 24       	eor	r1, r1
     404:	c4 01       	movw	r24, r8
     406:	82 1b       	sub	r24, r18
     408:	93 0b       	sbc	r25, r19
     40a:	9f 93       	push	r25
     40c:	8f 93       	push	r24
     40e:	9a 01       	movw	r18, r20
     410:	0e 94 7f 07 	call	0xefe	; 0xefe <__umulhisi3>
     414:	96 95       	lsr	r25
     416:	87 95       	ror	r24
     418:	9f 93       	push	r25
     41a:	8f 93       	push	r24
     41c:	92 01       	movw	r18, r4
     41e:	ad ec       	ldi	r26, 0xCD	; 205
     420:	bc ec       	ldi	r27, 0xCC	; 204
     422:	0e 94 7f 07 	call	0xefe	; 0xefe <__umulhisi3>
     426:	96 95       	lsr	r25
     428:	87 95       	ror	r24
     42a:	96 95       	lsr	r25
     42c:	87 95       	ror	r24
     42e:	96 95       	lsr	r25
     430:	87 95       	ror	r24
     432:	9c 01       	movw	r18, r24
     434:	22 0f       	add	r18, r18
     436:	33 1f       	adc	r19, r19
     438:	88 0f       	add	r24, r24
     43a:	99 1f       	adc	r25, r25
     43c:	88 0f       	add	r24, r24
     43e:	99 1f       	adc	r25, r25
     440:	88 0f       	add	r24, r24
     442:	99 1f       	adc	r25, r25
     444:	82 0f       	add	r24, r18
     446:	93 1f       	adc	r25, r19
     448:	92 01       	movw	r18, r4
     44a:	28 1b       	sub	r18, r24
     44c:	39 0b       	sbc	r19, r25
     44e:	c9 01       	movw	r24, r18
     450:	9f 93       	push	r25
     452:	2f 93       	push	r18
     454:	92 01       	movw	r18, r4
     456:	0e 94 7f 07 	call	0xefe	; 0xefe <__umulhisi3>
     45a:	96 95       	lsr	r25
     45c:	87 95       	ror	r24
     45e:	96 95       	lsr	r25
     460:	87 95       	ror	r24
     462:	96 95       	lsr	r25
     464:	87 95       	ror	r24
     466:	9f 93       	push	r25
     468:	8f 93       	push	r24
     46a:	86 e0       	ldi	r24, 0x06	; 6
     46c:	91 e0       	ldi	r25, 0x01	; 1
     46e:	9f 93       	push	r25
     470:	8f 93       	push	r24
     472:	21 e0       	ldi	r18, 0x01	; 1
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	2c 0f       	add	r18, r28
     478:	3d 1f       	adc	r19, r29
     47a:	3f 93       	push	r19
     47c:	2f 93       	push	r18
     47e:	0e 94 8e 07 	call	0xf1c	; 0xf1c <sprintf>
			(voltage / 10), (voltage % 10), (current / 100), (current % 100));
			uart_write(uart_buffer, msg_len);
     482:	68 2f       	mov	r22, r24
     484:	ce 01       	movw	r24, r28
     486:	01 96       	adiw	r24, 0x01	; 1
     488:	0e 94 c5 04 	call	0x98a	; 0x98a <uart_write>
     48c:	0f b6       	in	r0, 0x3f	; 63
     48e:	f8 94       	cli
     490:	de bf       	out	0x3e, r29	; 62
     492:	0f be       	out	0x3f, r0	; 63
     494:	cd bf       	out	0x3d, r28	; 61
     496:	00 cf       	rjmp	.-512    	; 0x298 <main+0x64>

00000498 <max7219_write>:
static uint8_t buffer[MAX7219_DIG_COUNT];
static uint8_t written_positions[MAX7219_DIG_COUNT] = {0};
static gpio_t *cs = NULL;

static void max7219_write(const max7219_address_t address, const uint8_t value)
{
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	d8 2f       	mov	r29, r24
     49e:	c6 2f       	mov	r28, r22
	gpio_set(cs, GPIO_LOW);
     4a0:	60 e0       	ldi	r22, 0x00	; 0
     4a2:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <cs>
     4a6:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <cs+0x1>
     4aa:	0e 94 a1 00 	call	0x142	; 0x142 <gpio_set>
	spi_transfer_byte(address);
     4ae:	8d 2f       	mov	r24, r29
     4b0:	0e 94 76 03 	call	0x6ec	; 0x6ec <spi_transfer_byte>
	spi_transfer_byte(value);
     4b4:	8c 2f       	mov	r24, r28
     4b6:	0e 94 76 03 	call	0x6ec	; 0x6ec <spi_transfer_byte>
	gpio_set(cs, GPIO_HIGH);
     4ba:	61 e0       	ldi	r22, 0x01	; 1
     4bc:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <cs>
     4c0:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <cs+0x1>
     4c4:	0e 94 a1 00 	call	0x142	; 0x142 <gpio_set>
}
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	08 95       	ret

000004ce <max7219_write_number>:

void max7219_write_number(uint8_t pos, uint32_t number)
{
     4ce:	2f 92       	push	r2
     4d0:	3f 92       	push	r3
     4d2:	6f 92       	push	r6
     4d4:	7f 92       	push	r7
     4d6:	8f 92       	push	r8
     4d8:	9f 92       	push	r9
     4da:	af 92       	push	r10
     4dc:	bf 92       	push	r11
     4de:	cf 92       	push	r12
     4e0:	df 92       	push	r13
     4e2:	ef 92       	push	r14
     4e4:	ff 92       	push	r15
     4e6:	0f 93       	push	r16
     4e8:	1f 93       	push	r17
     4ea:	cf 93       	push	r28
     4ec:	df 93       	push	r29
     4ee:	00 d0       	rcall	.+0      	; 0x4f0 <max7219_write_number+0x22>
     4f0:	00 d0       	rcall	.+0      	; 0x4f2 <max7219_write_number+0x24>
     4f2:	00 d0       	rcall	.+0      	; 0x4f4 <max7219_write_number+0x26>
     4f4:	cd b7       	in	r28, 0x3d	; 61
     4f6:	de b7       	in	r29, 0x3e	; 62
     4f8:	49 83       	std	Y+1, r20	; 0x01
     4fa:	5a 83       	std	Y+2, r21	; 0x02
     4fc:	6b 83       	std	Y+3, r22	; 0x03
     4fe:	7c 83       	std	Y+4, r23	; 0x04
	uint32_t temp = number;
	uint8_t digit_count = 0;
	uint32_t divider = 1;

	while ((temp != 0) && (pos + digit_count) < MAX7219_DIG_COUNT)
     500:	41 15       	cp	r20, r1
     502:	51 05       	cpc	r21, r1
     504:	61 05       	cpc	r22, r1
     506:	71 05       	cpc	r23, r1
     508:	09 f4       	brne	.+2      	; 0x50c <max7219_write_number+0x3e>
     50a:	5a c0       	rjmp	.+180    	; 0x5c0 <max7219_write_number+0xf2>
     50c:	68 2e       	mov	r6, r24
     50e:	71 2c       	mov	r7, r1
     510:	26 e0       	ldi	r18, 0x06	; 6
     512:	62 16       	cp	r6, r18
     514:	71 04       	cpc	r7, r1
     516:	0c f0       	brlt	.+2      	; 0x51a <max7219_write_number+0x4c>
     518:	53 c0       	rjmp	.+166    	; 0x5c0 <max7219_write_number+0xf2>
     51a:	13 01       	movw	r2, r6
     51c:	4a 01       	movw	r8, r20
     51e:	5b 01       	movw	r10, r22
     520:	c1 2c       	mov	r12, r1
     522:	d1 2c       	mov	r13, r1
     524:	76 01       	movw	r14, r12
     526:	c3 94       	inc	r12
     528:	10 e0       	ldi	r17, 0x00	; 0
	{
		temp /= 10;
		buffer[digit_count + pos] = numbers[(number / divider) % 10];
		written_positions[digit_count + pos] = 1; // Mark the position as written
     52a:	01 e0       	ldi	r16, 0x01	; 1
	uint8_t digit_count = 0;
	uint32_t divider = 1;

	while ((temp != 0) && (pos + digit_count) < MAX7219_DIG_COUNT)
	{
		temp /= 10;
     52c:	c5 01       	movw	r24, r10
     52e:	b4 01       	movw	r22, r8
     530:	2a e0       	ldi	r18, 0x0A	; 10
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	40 e0       	ldi	r20, 0x00	; 0
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__udivmodsi4>
     53c:	49 01       	movw	r8, r18
     53e:	5a 01       	movw	r10, r20
		buffer[digit_count + pos] = numbers[(number / divider) % 10];
     540:	a1 01       	movw	r20, r2
     542:	46 5c       	subi	r20, 0xC6	; 198
     544:	5e 4f       	sbci	r21, 0xFE	; 254
     546:	5e 83       	std	Y+6, r21	; 0x06
     548:	4d 83       	std	Y+5, r20	; 0x05
     54a:	69 81       	ldd	r22, Y+1	; 0x01
     54c:	7a 81       	ldd	r23, Y+2	; 0x02
     54e:	8b 81       	ldd	r24, Y+3	; 0x03
     550:	9c 81       	ldd	r25, Y+4	; 0x04
     552:	a7 01       	movw	r20, r14
     554:	96 01       	movw	r18, r12
     556:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__udivmodsi4>
     55a:	ca 01       	movw	r24, r20
     55c:	b9 01       	movw	r22, r18
     55e:	2a e0       	ldi	r18, 0x0A	; 10
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	40 e0       	ldi	r20, 0x00	; 0
     564:	50 e0       	ldi	r21, 0x00	; 0
     566:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__udivmodsi4>
     56a:	fb 01       	movw	r30, r22
     56c:	e0 5e       	subi	r30, 0xE0	; 224
     56e:	fe 4f       	sbci	r31, 0xFE	; 254
     570:	80 81       	ld	r24, Z
     572:	ed 81       	ldd	r30, Y+5	; 0x05
     574:	fe 81       	ldd	r31, Y+6	; 0x06
     576:	80 83       	st	Z, r24
		written_positions[digit_count + pos] = 1; // Mark the position as written
     578:	f1 01       	movw	r30, r2
     57a:	ec 5c       	subi	r30, 0xCC	; 204
     57c:	fe 4f       	sbci	r31, 0xFE	; 254
     57e:	00 83       	st	Z, r16
		digit_count++;
     580:	1f 5f       	subi	r17, 0xFF	; 255
		divider *= 10;
     582:	cc 0c       	add	r12, r12
     584:	dd 1c       	adc	r13, r13
     586:	ee 1c       	adc	r14, r14
     588:	ff 1c       	adc	r15, r15
     58a:	d7 01       	movw	r26, r14
     58c:	c6 01       	movw	r24, r12
     58e:	88 0f       	add	r24, r24
     590:	99 1f       	adc	r25, r25
     592:	aa 1f       	adc	r26, r26
     594:	bb 1f       	adc	r27, r27
     596:	88 0f       	add	r24, r24
     598:	99 1f       	adc	r25, r25
     59a:	aa 1f       	adc	r26, r26
     59c:	bb 1f       	adc	r27, r27
     59e:	c8 0e       	add	r12, r24
     5a0:	d9 1e       	adc	r13, r25
     5a2:	ea 1e       	adc	r14, r26
     5a4:	fb 1e       	adc	r15, r27
{
	uint32_t temp = number;
	uint8_t digit_count = 0;
	uint32_t divider = 1;

	while ((temp != 0) && (pos + digit_count) < MAX7219_DIG_COUNT)
     5a6:	81 14       	cp	r8, r1
     5a8:	91 04       	cpc	r9, r1
     5aa:	a1 04       	cpc	r10, r1
     5ac:	b1 04       	cpc	r11, r1
     5ae:	41 f0       	breq	.+16     	; 0x5c0 <max7219_write_number+0xf2>
     5b0:	13 01       	movw	r2, r6
     5b2:	21 0e       	add	r2, r17
     5b4:	31 1c       	adc	r3, r1
     5b6:	f6 e0       	ldi	r31, 0x06	; 6
     5b8:	2f 16       	cp	r2, r31
     5ba:	31 04       	cpc	r3, r1
     5bc:	0c f4       	brge	.+2      	; 0x5c0 <max7219_write_number+0xf2>
     5be:	b6 cf       	rjmp	.-148    	; 0x52c <max7219_write_number+0x5e>
		buffer[digit_count + pos] = numbers[(number / divider) % 10];
		written_positions[digit_count + pos] = 1; // Mark the position as written
		digit_count++;
		divider *= 10;
	}
}
     5c0:	26 96       	adiw	r28, 0x06	; 6
     5c2:	0f b6       	in	r0, 0x3f	; 63
     5c4:	f8 94       	cli
     5c6:	de bf       	out	0x3e, r29	; 62
     5c8:	0f be       	out	0x3f, r0	; 63
     5ca:	cd bf       	out	0x3d, r28	; 61
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	1f 91       	pop	r17
     5d2:	0f 91       	pop	r16
     5d4:	ff 90       	pop	r15
     5d6:	ef 90       	pop	r14
     5d8:	df 90       	pop	r13
     5da:	cf 90       	pop	r12
     5dc:	bf 90       	pop	r11
     5de:	af 90       	pop	r10
     5e0:	9f 90       	pop	r9
     5e2:	8f 90       	pop	r8
     5e4:	7f 90       	pop	r7
     5e6:	6f 90       	pop	r6
     5e8:	3f 90       	pop	r3
     5ea:	2f 90       	pop	r2
     5ec:	08 95       	ret

000005ee <max7219_init>:

void max7219_init(gpio_t *cs_pin)
{
	cs = cs_pin;
     5ee:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <cs+0x1>
     5f2:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <cs>
	gpio_set_direction(cs, GPIO_DIR_OUTPUT);
     5f6:	60 e0       	ldi	r22, 0x00	; 0
     5f8:	0e 94 76 00 	call	0xec	; 0xec <gpio_set_direction>
	gpio_set(cs, GPIO_HIGH);
     5fc:	61 e0       	ldi	r22, 0x01	; 1
     5fe:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <cs>
     602:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <cs+0x1>
     606:	0e 94 a1 00 	call	0x142	; 0x142 <gpio_set>

	max7219_write(MAX7219_REG_ADDR_DECODE_MODE, 0x00);
     60a:	60 e0       	ldi	r22, 0x00	; 0
     60c:	89 e0       	ldi	r24, 0x09	; 9
     60e:	0e 94 4c 02 	call	0x498	; 0x498 <max7219_write>
	max7219_write(MAX7219_REG_ADDR_INTENSITY, 0x0F);
     612:	6f e0       	ldi	r22, 0x0F	; 15
     614:	8a e0       	ldi	r24, 0x0A	; 10
     616:	0e 94 4c 02 	call	0x498	; 0x498 <max7219_write>
	max7219_write(MAX7219_REG_ADDR_SCAN_LIM, 0x05);
     61a:	65 e0       	ldi	r22, 0x05	; 5
     61c:	8b e0       	ldi	r24, 0x0B	; 11
     61e:	0e 94 4c 02 	call	0x498	; 0x498 <max7219_write>
	max7219_write(MAX7219_REG_ADDR_SHUTDOWN, 0x01);
     622:	61 e0       	ldi	r22, 0x01	; 1
     624:	8c e0       	ldi	r24, 0x0C	; 12
     626:	0e 94 4c 02 	call	0x498	; 0x498 <max7219_write>
	max7219_write(MAX7219_REG_ADDR_TEST, 0x00);
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	8f e0       	ldi	r24, 0x0F	; 15
     62e:	0e 94 4c 02 	call	0x498	; 0x498 <max7219_write>
     632:	08 95       	ret

00000634 <max7219_update>:
}

void max7219_update(void)
{
     634:	0f 93       	push	r16
     636:	1f 93       	push	r17
     638:	cf 93       	push	r28
     63a:	0a e3       	ldi	r16, 0x3A	; 58
     63c:	11 e0       	ldi	r17, 0x01	; 1
	uint8_t i;
	for (i = 0; i < MAX7219_DIG_COUNT; i++)
     63e:	c0 e0       	ldi	r28, 0x00	; 0
	{
		max7219_write((max7219_address_t)(i + 1), buffer[i]);
     640:	f8 01       	movw	r30, r16
     642:	61 91       	ld	r22, Z+
     644:	8f 01       	movw	r16, r30
     646:	cf 5f       	subi	r28, 0xFF	; 255
     648:	8c 2f       	mov	r24, r28
     64a:	0e 94 4c 02 	call	0x498	; 0x498 <max7219_write>
}

void max7219_update(void)
{
	uint8_t i;
	for (i = 0; i < MAX7219_DIG_COUNT; i++)
     64e:	c6 30       	cpi	r28, 0x06	; 6
     650:	b9 f7       	brne	.-18     	; 0x640 <max7219_update+0xc>
	{
		max7219_write((max7219_address_t)(i + 1), buffer[i]);
	}
}
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	0f 91       	pop	r16
     658:	08 95       	ret

0000065a <max7219_clear>:

void max7219_clear(uint8_t pos, uint8_t count)
{
	uint8_t i;
	for (i = pos; i < (pos + count); i++)
     65a:	28 2f       	mov	r18, r24
     65c:	30 e0       	ldi	r19, 0x00	; 0
     65e:	a9 01       	movw	r20, r18
     660:	46 0f       	add	r20, r22
     662:	51 1d       	adc	r21, r1
     664:	24 17       	cp	r18, r20
     666:	35 07       	cpc	r19, r21
     668:	84 f4       	brge	.+32     	; 0x68a <max7219_clear+0x30>
	{
		buffer[i] &= 0x80;
     66a:	f9 01       	movw	r30, r18
     66c:	e6 5c       	subi	r30, 0xC6	; 198
     66e:	fe 4f       	sbci	r31, 0xFE	; 254
     670:	90 81       	ld	r25, Z
     672:	90 78       	andi	r25, 0x80	; 128
     674:	90 83       	st	Z, r25
		written_positions[i] = 0; // Mark the position as cleared
     676:	f9 01       	movw	r30, r18
     678:	ec 5c       	subi	r30, 0xCC	; 204
     67a:	fe 4f       	sbci	r31, 0xFE	; 254
     67c:	10 82       	st	Z, r1
}

void max7219_clear(uint8_t pos, uint8_t count)
{
	uint8_t i;
	for (i = pos; i < (pos + count); i++)
     67e:	8f 5f       	subi	r24, 0xFF	; 255
     680:	28 2f       	mov	r18, r24
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	24 17       	cp	r18, r20
     686:	35 07       	cpc	r19, r21
     688:	84 f3       	brlt	.-32     	; 0x66a <max7219_clear+0x10>
     68a:	08 95       	ret

0000068c <max7219_write_dot>:
	}
}

void max7219_write_dot(uint8_t pos, uint8_t write)
{
	if (write)
     68c:	66 23       	and	r22, r22
     68e:	41 f0       	breq	.+16     	; 0x6a0 <max7219_write_dot+0x14>
	{
		buffer[pos] |= (1 << 7);
     690:	e8 2f       	mov	r30, r24
     692:	f0 e0       	ldi	r31, 0x00	; 0
     694:	e6 5c       	subi	r30, 0xC6	; 198
     696:	fe 4f       	sbci	r31, 0xFE	; 254
     698:	80 81       	ld	r24, Z
     69a:	80 68       	ori	r24, 0x80	; 128
     69c:	80 83       	st	Z, r24
     69e:	08 95       	ret
	}
	else
	{
		buffer[pos] &= ~(1 << 7);
     6a0:	e8 2f       	mov	r30, r24
     6a2:	f0 e0       	ldi	r31, 0x00	; 0
     6a4:	e6 5c       	subi	r30, 0xC6	; 198
     6a6:	fe 4f       	sbci	r31, 0xFE	; 254
     6a8:	80 81       	ld	r24, Z
     6aa:	8f 77       	andi	r24, 0x7F	; 127
     6ac:	80 83       	st	Z, r24
     6ae:	08 95       	ret

000006b0 <max7219_inital>:
	}
}

void max7219_inital()
{
     6b0:	e4 e3       	ldi	r30, 0x34	; 52
     6b2:	f1 e0       	ldi	r31, 0x01	; 1
     6b4:	aa e3       	ldi	r26, 0x3A	; 58
     6b6:	b1 e0       	ldi	r27, 0x01	; 1
     6b8:	2a e3       	ldi	r18, 0x3A	; 58
     6ba:	31 e0       	ldi	r19, 0x01	; 1
	uint8_t i;
	for (i = 0; i < MAX7219_DIG_COUNT; i++)
	{
		if (written_positions[i] == 0)
		{
			buffer[i] = numbers[0]; // Set to zero only if not written by max7219_write_number
     6bc:	9e e7       	ldi	r25, 0x7E	; 126
void max7219_inital()
{
	uint8_t i;
	for (i = 0; i < MAX7219_DIG_COUNT; i++)
	{
		if (written_positions[i] == 0)
     6be:	81 91       	ld	r24, Z+
     6c0:	81 11       	cpse	r24, r1
     6c2:	01 c0       	rjmp	.+2      	; 0x6c6 <max7219_inital+0x16>
		{
			buffer[i] = numbers[0]; // Set to zero only if not written by max7219_write_number
     6c4:	9c 93       	st	X, r25
     6c6:	11 96       	adiw	r26, 0x01	; 1
}

void max7219_inital()
{
	uint8_t i;
	for (i = 0; i < MAX7219_DIG_COUNT; i++)
     6c8:	e2 17       	cp	r30, r18
     6ca:	f3 07       	cpc	r31, r19
     6cc:	c1 f7       	brne	.-16     	; 0x6be <max7219_inital+0xe>
		if (written_positions[i] == 0)
		{
			buffer[i] = numbers[0]; // Set to zero only if not written by max7219_write_number
		}
	}
}
     6ce:	08 95       	ret

000006d0 <spi_init>:
     6d0:	23 9a       	sbi	0x04, 3	; 4
     6d2:	25 9a       	sbi	0x04, 5	; 4
     6d4:	22 9a       	sbi	0x04, 2	; 4
     6d6:	24 98       	cbi	0x04, 4	; 4
     6d8:	8c b5       	in	r24, 0x2c	; 44
     6da:	83 60       	ori	r24, 0x03	; 3
     6dc:	8c bd       	out	0x2c, r24	; 44
     6de:	8c b5       	in	r24, 0x2c	; 44
     6e0:	80 61       	ori	r24, 0x10	; 16
     6e2:	8c bd       	out	0x2c, r24	; 44
     6e4:	8c b5       	in	r24, 0x2c	; 44
     6e6:	80 64       	ori	r24, 0x40	; 64
     6e8:	8c bd       	out	0x2c, r24	; 44
     6ea:	08 95       	ret

000006ec <spi_transfer_byte>:
     6ec:	8e bd       	out	0x2e, r24	; 46
     6ee:	0d b4       	in	r0, 0x2d	; 45
     6f0:	07 fe       	sbrs	r0, 7
     6f2:	fd cf       	rjmp	.-6      	; 0x6ee <spi_transfer_byte+0x2>
     6f4:	8e b5       	in	r24, 0x2e	; 46
     6f6:	08 95       	ret

000006f8 <__vector_14>:
     6f8:	1f 92       	push	r1
     6fa:	0f 92       	push	r0
     6fc:	0f b6       	in	r0, 0x3f	; 63
     6fe:	0f 92       	push	r0
     700:	11 24       	eor	r1, r1
     702:	8f 93       	push	r24
     704:	9f 93       	push	r25
     706:	af 93       	push	r26
     708:	bf 93       	push	r27
     70a:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <timer_tick>
     70e:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <timer_tick+0x1>
     712:	a0 91 42 01 	lds	r26, 0x0142	; 0x800142 <timer_tick+0x2>
     716:	b0 91 43 01 	lds	r27, 0x0143	; 0x800143 <timer_tick+0x3>
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	a1 1d       	adc	r26, r1
     71e:	b1 1d       	adc	r27, r1
     720:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timer_tick>
     724:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timer_tick+0x1>
     728:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timer_tick+0x2>
     72c:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timer_tick+0x3>
     730:	bf 91       	pop	r27
     732:	af 91       	pop	r26
     734:	9f 91       	pop	r25
     736:	8f 91       	pop	r24
     738:	0f 90       	pop	r0
     73a:	0f be       	out	0x3f, r0	; 63
     73c:	0f 90       	pop	r0
     73e:	1f 90       	pop	r1
     740:	18 95       	reti

00000742 <timer_init>:
     742:	84 b5       	in	r24, 0x24	; 36
     744:	82 60       	ori	r24, 0x02	; 2
     746:	84 bd       	out	0x24, r24	; 36
     748:	89 ef       	ldi	r24, 0xF9	; 249
     74a:	87 bd       	out	0x27, r24	; 39
     74c:	37 b5       	in	r19, 0x27	; 39
     74e:	25 b3       	in	r18, 0x15	; 21
     750:	81 e0       	ldi	r24, 0x01	; 1
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	02 c0       	rjmp	.+4      	; 0x75a <timer_init+0x18>
     756:	88 0f       	add	r24, r24
     758:	99 1f       	adc	r25, r25
     75a:	3a 95       	dec	r19
     75c:	e2 f7       	brpl	.-8      	; 0x756 <timer_init+0x14>
     75e:	82 2b       	or	r24, r18
     760:	85 bb       	out	0x15, r24	; 21
     762:	ee e6       	ldi	r30, 0x6E	; 110
     764:	f0 e0       	ldi	r31, 0x00	; 0
     766:	80 81       	ld	r24, Z
     768:	82 60       	ori	r24, 0x02	; 2
     76a:	80 83       	st	Z, r24
     76c:	85 b5       	in	r24, 0x25	; 37
     76e:	83 60       	ori	r24, 0x03	; 3
     770:	85 bd       	out	0x25, r24	; 37
     772:	08 95       	ret

00000774 <timer_get_count>:
     774:	60 91 40 01 	lds	r22, 0x0140	; 0x800140 <timer_tick>
     778:	70 91 41 01 	lds	r23, 0x0141	; 0x800141 <timer_tick+0x1>
     77c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <timer_tick+0x2>
     780:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <timer_tick+0x3>
     784:	08 95       	ret

00000786 <uart_init>:
{
	while(!(UCSR0A & (1 << UDRE0)));
	UDR0 = c;
}
void uart_init(uint32_t baudrate)
{
     786:	4f 92       	push	r4
     788:	5f 92       	push	r5
     78a:	6f 92       	push	r6
     78c:	7f 92       	push	r7
     78e:	8f 92       	push	r8
     790:	9f 92       	push	r9
     792:	af 92       	push	r10
     794:	bf 92       	push	r11
     796:	cf 92       	push	r12
     798:	df 92       	push	r13
     79a:	ef 92       	push	r14
     79c:	ff 92       	push	r15
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	cd b7       	in	r28, 0x3d	; 61
     7a4:	de b7       	in	r29, 0x3e	; 62
     7a6:	2c 97       	sbiw	r28, 0x0c	; 12
     7a8:	0f b6       	in	r0, 0x3f	; 63
     7aa:	f8 94       	cli
     7ac:	de bf       	out	0x3e, r29	; 62
     7ae:	0f be       	out	0x3f, r0	; 63
     7b0:	cd bf       	out	0x3d, r28	; 61
     7b2:	6b 01       	movw	r12, r22
     7b4:	7c 01       	movw	r14, r24
static uint16_t baudtoreg(uint32_t baud, uint8_t x2)
{
	uint8_t multipler = 8;
	if(!x2) (multipler *= 2);
	
	return round(((F_CPU / (float)(multipler * baud)) -1));
     7b6:	4b 01       	movw	r8, r22
     7b8:	5c 01       	movw	r10, r24
     7ba:	88 0c       	add	r8, r8
     7bc:	99 1c       	adc	r9, r9
     7be:	aa 1c       	adc	r10, r10
     7c0:	bb 1c       	adc	r11, r11
     7c2:	88 0c       	add	r8, r8
     7c4:	99 1c       	adc	r9, r9
     7c6:	aa 1c       	adc	r10, r10
     7c8:	bb 1c       	adc	r11, r11
     7ca:	88 0c       	add	r8, r8
     7cc:	99 1c       	adc	r9, r9
     7ce:	aa 1c       	adc	r10, r10
     7d0:	bb 1c       	adc	r11, r11
     7d2:	c5 01       	movw	r24, r10
     7d4:	b4 01       	movw	r22, r8
     7d6:	66 0f       	add	r22, r22
     7d8:	77 1f       	adc	r23, r23
     7da:	88 1f       	adc	r24, r24
     7dc:	99 1f       	adc	r25, r25
     7de:	0e 94 f6 05 	call	0xbec	; 0xbec <__floatunsisf>
     7e2:	9b 01       	movw	r18, r22
     7e4:	ac 01       	movw	r20, r24
     7e6:	60 e0       	ldi	r22, 0x00	; 0
     7e8:	74 e2       	ldi	r23, 0x24	; 36
     7ea:	84 e7       	ldi	r24, 0x74	; 116
     7ec:	9b e4       	ldi	r25, 0x4B	; 75
     7ee:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__divsf3>
     7f2:	20 e0       	ldi	r18, 0x00	; 0
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	40 e8       	ldi	r20, 0x80	; 128
     7f8:	5f e3       	ldi	r21, 0x3F	; 63
     7fa:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__subsf3>
     7fe:	0e 94 f1 06 	call	0xde2	; 0xde2 <round>
     802:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fixunssfsi>
     806:	69 87       	std	Y+9, r22	; 0x09
     808:	7a 87       	std	Y+10, r23	; 0x0a
     80a:	8b 87       	std	Y+11, r24	; 0x0b
     80c:	9c 87       	std	Y+12, r25	; 0x0c
     80e:	c5 01       	movw	r24, r10
     810:	b4 01       	movw	r22, r8
     812:	0e 94 f6 05 	call	0xbec	; 0xbec <__floatunsisf>
     816:	9b 01       	movw	r18, r22
     818:	ac 01       	movw	r20, r24
     81a:	60 e0       	ldi	r22, 0x00	; 0
     81c:	74 e2       	ldi	r23, 0x24	; 36
     81e:	84 e7       	ldi	r24, 0x74	; 116
     820:	9b e4       	ldi	r25, 0x4B	; 75
     822:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__divsf3>
     826:	20 e0       	ldi	r18, 0x00	; 0
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	40 e8       	ldi	r20, 0x80	; 128
     82c:	5f e3       	ldi	r21, 0x3F	; 63
     82e:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__subsf3>
     832:	0e 94 f1 06 	call	0xde2	; 0xde2 <round>
     836:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fixunssfsi>
     83a:	2b 01       	movw	r4, r22
     83c:	3c 01       	movw	r6, r24
	volatile float error, error2x;
	
	baud_reg = baudtoreg(baudrate, 0);
	baud_reg2x = baudtoreg(baudrate, 1);
	
	error = (((float)regtobaud(baud_reg, 0) / baudrate) - 1) * 100;
     83e:	c7 01       	movw	r24, r14
     840:	b6 01       	movw	r22, r12
     842:	0e 94 f6 05 	call	0xbec	; 0xbec <__floatunsisf>
     846:	6b 01       	movw	r12, r22
     848:	7c 01       	movw	r14, r24
     84a:	29 85       	ldd	r18, Y+9	; 0x09
     84c:	3a 85       	ldd	r19, Y+10	; 0x0a
     84e:	2f 5f       	subi	r18, 0xFF	; 255
     850:	3f 4f       	sbci	r19, 0xFF	; 255
     852:	22 95       	swap	r18
     854:	32 95       	swap	r19
     856:	30 7f       	andi	r19, 0xF0	; 240
     858:	32 27       	eor	r19, r18
     85a:	20 7f       	andi	r18, 0xF0	; 240
     85c:	32 27       	eor	r19, r18
     85e:	40 e0       	ldi	r20, 0x00	; 0
     860:	50 e0       	ldi	r21, 0x00	; 0
     862:	0f 2e       	mov	r0, r31
     864:	81 2c       	mov	r8, r1
     866:	f4 e2       	ldi	r31, 0x24	; 36
     868:	9f 2e       	mov	r9, r31
     86a:	f4 ef       	ldi	r31, 0xF4	; 244
     86c:	af 2e       	mov	r10, r31
     86e:	b1 2c       	mov	r11, r1
     870:	f0 2d       	mov	r31, r0
     872:	c5 01       	movw	r24, r10
     874:	b4 01       	movw	r22, r8
     876:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__udivmodsi4>
     87a:	ca 01       	movw	r24, r20
     87c:	b9 01       	movw	r22, r18
     87e:	0e 94 f6 05 	call	0xbec	; 0xbec <__floatunsisf>
     882:	a7 01       	movw	r20, r14
     884:	96 01       	movw	r18, r12
     886:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__divsf3>
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	40 e8       	ldi	r20, 0x80	; 128
     890:	5f e3       	ldi	r21, 0x3F	; 63
     892:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__subsf3>
     896:	20 e0       	ldi	r18, 0x00	; 0
     898:	30 e0       	ldi	r19, 0x00	; 0
     89a:	48 ec       	ldi	r20, 0xC8	; 200
     89c:	52 e4       	ldi	r21, 0x42	; 66
     89e:	0e 94 84 06 	call	0xd08	; 0xd08 <__mulsf3>
     8a2:	69 83       	std	Y+1, r22	; 0x01
     8a4:	7a 83       	std	Y+2, r23	; 0x02
     8a6:	8b 83       	std	Y+3, r24	; 0x03
     8a8:	9c 83       	std	Y+4, r25	; 0x04
	error2x = (((float)regtobaud(baud_reg2x, 1) / baudrate) - 1) * 100;
     8aa:	92 01       	movw	r18, r4
     8ac:	2f 5f       	subi	r18, 0xFF	; 255
     8ae:	3f 4f       	sbci	r19, 0xFF	; 255
     8b0:	22 0f       	add	r18, r18
     8b2:	33 1f       	adc	r19, r19
     8b4:	22 0f       	add	r18, r18
     8b6:	33 1f       	adc	r19, r19
     8b8:	22 0f       	add	r18, r18
     8ba:	33 1f       	adc	r19, r19
     8bc:	40 e0       	ldi	r20, 0x00	; 0
     8be:	50 e0       	ldi	r21, 0x00	; 0
     8c0:	c5 01       	movw	r24, r10
     8c2:	b4 01       	movw	r22, r8
     8c4:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__udivmodsi4>
     8c8:	ca 01       	movw	r24, r20
     8ca:	b9 01       	movw	r22, r18
     8cc:	0e 94 f6 05 	call	0xbec	; 0xbec <__floatunsisf>
     8d0:	a7 01       	movw	r20, r14
     8d2:	96 01       	movw	r18, r12
     8d4:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__divsf3>
     8d8:	20 e0       	ldi	r18, 0x00	; 0
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	40 e8       	ldi	r20, 0x80	; 128
     8de:	5f e3       	ldi	r21, 0x3F	; 63
     8e0:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__subsf3>
     8e4:	20 e0       	ldi	r18, 0x00	; 0
     8e6:	30 e0       	ldi	r19, 0x00	; 0
     8e8:	48 ec       	ldi	r20, 0xC8	; 200
     8ea:	52 e4       	ldi	r21, 0x42	; 66
     8ec:	0e 94 84 06 	call	0xd08	; 0xd08 <__mulsf3>
     8f0:	6d 83       	std	Y+5, r22	; 0x05
     8f2:	7e 83       	std	Y+6, r23	; 0x06
     8f4:	8f 83       	std	Y+7, r24	; 0x07
     8f6:	98 87       	std	Y+8, r25	; 0x08
	
	if(abs(error) <= abs(error2x))
     8f8:	69 81       	ldd	r22, Y+1	; 0x01
     8fa:	7a 81       	ldd	r23, Y+2	; 0x02
     8fc:	8b 81       	ldd	r24, Y+3	; 0x03
     8fe:	9c 81       	ldd	r25, Y+4	; 0x04
     900:	cd 80       	ldd	r12, Y+5	; 0x05
     902:	de 80       	ldd	r13, Y+6	; 0x06
     904:	ef 80       	ldd	r14, Y+7	; 0x07
     906:	f8 84       	ldd	r15, Y+8	; 0x08
     908:	0e 94 c0 05 	call	0xb80	; 0xb80 <__fixsfsi>
     90c:	5b 01       	movw	r10, r22
     90e:	77 23       	and	r23, r23
     910:	24 f4       	brge	.+8      	; 0x91a <__stack+0x1b>
     912:	aa 24       	eor	r10, r10
     914:	bb 24       	eor	r11, r11
     916:	a6 1a       	sub	r10, r22
     918:	b7 0a       	sbc	r11, r23
     91a:	c7 01       	movw	r24, r14
     91c:	b6 01       	movw	r22, r12
     91e:	0e 94 c0 05 	call	0xb80	; 0xb80 <__fixsfsi>
     922:	9b 01       	movw	r18, r22
     924:	77 23       	and	r23, r23
     926:	24 f4       	brge	.+8      	; 0x930 <__stack+0x31>
     928:	22 27       	eor	r18, r18
     92a:	33 27       	eor	r19, r19
     92c:	26 1b       	sub	r18, r22
     92e:	37 0b       	sbc	r19, r23
     930:	2a 15       	cp	r18, r10
     932:	3b 05       	cpc	r19, r11
     934:	3c f0       	brlt	.+14     	; 0x944 <__stack+0x45>
	{
		UBRR0 =baud_reg;
     936:	89 85       	ldd	r24, Y+9	; 0x09
     938:	9a 85       	ldd	r25, Y+10	; 0x0a
     93a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     93e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     942:	09 c0       	rjmp	.+18     	; 0x956 <__stack+0x57>
	}
	else
	{
		UCSR0A |= (1 << U2X0);
     944:	e0 ec       	ldi	r30, 0xC0	; 192
     946:	f0 e0       	ldi	r31, 0x00	; 0
     948:	80 81       	ld	r24, Z
     94a:	82 60       	ori	r24, 0x02	; 2
     94c:	80 83       	st	Z, r24
		UBRR0 = baud_reg2x;
     94e:	50 92 c5 00 	sts	0x00C5, r5	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     952:	40 92 c4 00 	sts	0x00C4, r4	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	}
	
	UCSR0B |= (1 << TXEN0);
     956:	e1 ec       	ldi	r30, 0xC1	; 193
     958:	f0 e0       	ldi	r31, 0x00	; 0
     95a:	80 81       	ld	r24, Z
     95c:	88 60       	ori	r24, 0x08	; 8
     95e:	80 83       	st	Z, r24
	
}
     960:	2c 96       	adiw	r28, 0x0c	; 12
     962:	0f b6       	in	r0, 0x3f	; 63
     964:	f8 94       	cli
     966:	de bf       	out	0x3e, r29	; 62
     968:	0f be       	out	0x3f, r0	; 63
     96a:	cd bf       	out	0x3d, r28	; 61
     96c:	df 91       	pop	r29
     96e:	cf 91       	pop	r28
     970:	ff 90       	pop	r15
     972:	ef 90       	pop	r14
     974:	df 90       	pop	r13
     976:	cf 90       	pop	r12
     978:	bf 90       	pop	r11
     97a:	af 90       	pop	r10
     97c:	9f 90       	pop	r9
     97e:	8f 90       	pop	r8
     980:	7f 90       	pop	r7
     982:	6f 90       	pop	r6
     984:	5f 90       	pop	r5
     986:	4f 90       	pop	r4
     988:	08 95       	ret

0000098a <uart_write>:

void uart_write(char * str, uint8_t length)
{
     98a:	cf 93       	push	r28
     98c:	df 93       	push	r29
	uint8_t i;
	for (i = 0; i < length; i++)
     98e:	66 23       	and	r22, r22
     990:	a9 f0       	breq	.+42     	; 0x9bc <uart_write+0x32>
     992:	dc 01       	movw	r26, r24
     994:	61 50       	subi	r22, 0x01	; 1
     996:	26 2f       	mov	r18, r22
     998:	30 e0       	ldi	r19, 0x00	; 0
     99a:	2f 5f       	subi	r18, 0xFF	; 255
     99c:	3f 4f       	sbci	r19, 0xFF	; 255
     99e:	ac 01       	movw	r20, r24
     9a0:	42 0f       	add	r20, r18
     9a2:	53 1f       	adc	r21, r19
	return F_CPU / (multipler * (reg + 1));
	
}
static void uart_put_char(char c)
{
	while(!(UCSR0A & (1 << UDRE0)));
     9a4:	e0 ec       	ldi	r30, 0xC0	; 192
     9a6:	f0 e0       	ldi	r31, 0x00	; 0
	UDR0 = c;
     9a8:	c6 ec       	ldi	r28, 0xC6	; 198
     9aa:	d0 e0       	ldi	r29, 0x00	; 0
void uart_write(char * str, uint8_t length)
{
	uint8_t i;
	for (i = 0; i < length; i++)
	{
		uart_put_char(*str++);
     9ac:	2d 91       	ld	r18, X+
	return F_CPU / (multipler * (reg + 1));
	
}
static void uart_put_char(char c)
{
	while(!(UCSR0A & (1 << UDRE0)));
     9ae:	90 81       	ld	r25, Z
     9b0:	95 ff       	sbrs	r25, 5
     9b2:	fd cf       	rjmp	.-6      	; 0x9ae <uart_write+0x24>
	UDR0 = c;
     9b4:	28 83       	st	Y, r18
}

void uart_write(char * str, uint8_t length)
{
	uint8_t i;
	for (i = 0; i < length; i++)
     9b6:	a4 17       	cp	r26, r20
     9b8:	b5 07       	cpc	r27, r21
     9ba:	c1 f7       	brne	.-16     	; 0x9ac <uart_write+0x22>
	{
		uart_put_char(*str++);
		
	}
}
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	08 95       	ret

000009c2 <__subsf3>:
     9c2:	50 58       	subi	r21, 0x80	; 128

000009c4 <__addsf3>:
     9c4:	bb 27       	eor	r27, r27
     9c6:	aa 27       	eor	r26, r26
     9c8:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__addsf3x>
     9cc:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_round>
     9d0:	0e 94 3c 06 	call	0xc78	; 0xc78 <__fp_pscA>
     9d4:	38 f0       	brcs	.+14     	; 0x9e4 <__addsf3+0x20>
     9d6:	0e 94 43 06 	call	0xc86	; 0xc86 <__fp_pscB>
     9da:	20 f0       	brcs	.+8      	; 0x9e4 <__addsf3+0x20>
     9dc:	39 f4       	brne	.+14     	; 0x9ec <__addsf3+0x28>
     9de:	9f 3f       	cpi	r25, 0xFF	; 255
     9e0:	19 f4       	brne	.+6      	; 0x9e8 <__addsf3+0x24>
     9e2:	26 f4       	brtc	.+8      	; 0x9ec <__addsf3+0x28>
     9e4:	0c 94 39 06 	jmp	0xc72	; 0xc72 <__fp_nan>
     9e8:	0e f4       	brtc	.+2      	; 0x9ec <__addsf3+0x28>
     9ea:	e0 95       	com	r30
     9ec:	e7 fb       	bst	r30, 7
     9ee:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__fp_inf>

000009f2 <__addsf3x>:
     9f2:	e9 2f       	mov	r30, r25
     9f4:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <__fp_split3>
     9f8:	58 f3       	brcs	.-42     	; 0x9d0 <__addsf3+0xc>
     9fa:	ba 17       	cp	r27, r26
     9fc:	62 07       	cpc	r22, r18
     9fe:	73 07       	cpc	r23, r19
     a00:	84 07       	cpc	r24, r20
     a02:	95 07       	cpc	r25, r21
     a04:	20 f0       	brcs	.+8      	; 0xa0e <__addsf3x+0x1c>
     a06:	79 f4       	brne	.+30     	; 0xa26 <__addsf3x+0x34>
     a08:	a6 f5       	brtc	.+104    	; 0xa72 <__addsf3x+0x80>
     a0a:	0c 94 7d 06 	jmp	0xcfa	; 0xcfa <__fp_zero>
     a0e:	0e f4       	brtc	.+2      	; 0xa12 <__addsf3x+0x20>
     a10:	e0 95       	com	r30
     a12:	0b 2e       	mov	r0, r27
     a14:	ba 2f       	mov	r27, r26
     a16:	a0 2d       	mov	r26, r0
     a18:	0b 01       	movw	r0, r22
     a1a:	b9 01       	movw	r22, r18
     a1c:	90 01       	movw	r18, r0
     a1e:	0c 01       	movw	r0, r24
     a20:	ca 01       	movw	r24, r20
     a22:	a0 01       	movw	r20, r0
     a24:	11 24       	eor	r1, r1
     a26:	ff 27       	eor	r31, r31
     a28:	59 1b       	sub	r21, r25
     a2a:	99 f0       	breq	.+38     	; 0xa52 <__addsf3x+0x60>
     a2c:	59 3f       	cpi	r21, 0xF9	; 249
     a2e:	50 f4       	brcc	.+20     	; 0xa44 <__addsf3x+0x52>
     a30:	50 3e       	cpi	r21, 0xE0	; 224
     a32:	68 f1       	brcs	.+90     	; 0xa8e <__addsf3x+0x9c>
     a34:	1a 16       	cp	r1, r26
     a36:	f0 40       	sbci	r31, 0x00	; 0
     a38:	a2 2f       	mov	r26, r18
     a3a:	23 2f       	mov	r18, r19
     a3c:	34 2f       	mov	r19, r20
     a3e:	44 27       	eor	r20, r20
     a40:	58 5f       	subi	r21, 0xF8	; 248
     a42:	f3 cf       	rjmp	.-26     	; 0xa2a <__addsf3x+0x38>
     a44:	46 95       	lsr	r20
     a46:	37 95       	ror	r19
     a48:	27 95       	ror	r18
     a4a:	a7 95       	ror	r26
     a4c:	f0 40       	sbci	r31, 0x00	; 0
     a4e:	53 95       	inc	r21
     a50:	c9 f7       	brne	.-14     	; 0xa44 <__addsf3x+0x52>
     a52:	7e f4       	brtc	.+30     	; 0xa72 <__addsf3x+0x80>
     a54:	1f 16       	cp	r1, r31
     a56:	ba 0b       	sbc	r27, r26
     a58:	62 0b       	sbc	r22, r18
     a5a:	73 0b       	sbc	r23, r19
     a5c:	84 0b       	sbc	r24, r20
     a5e:	ba f0       	brmi	.+46     	; 0xa8e <__addsf3x+0x9c>
     a60:	91 50       	subi	r25, 0x01	; 1
     a62:	a1 f0       	breq	.+40     	; 0xa8c <__addsf3x+0x9a>
     a64:	ff 0f       	add	r31, r31
     a66:	bb 1f       	adc	r27, r27
     a68:	66 1f       	adc	r22, r22
     a6a:	77 1f       	adc	r23, r23
     a6c:	88 1f       	adc	r24, r24
     a6e:	c2 f7       	brpl	.-16     	; 0xa60 <__addsf3x+0x6e>
     a70:	0e c0       	rjmp	.+28     	; 0xa8e <__addsf3x+0x9c>
     a72:	ba 0f       	add	r27, r26
     a74:	62 1f       	adc	r22, r18
     a76:	73 1f       	adc	r23, r19
     a78:	84 1f       	adc	r24, r20
     a7a:	48 f4       	brcc	.+18     	; 0xa8e <__addsf3x+0x9c>
     a7c:	87 95       	ror	r24
     a7e:	77 95       	ror	r23
     a80:	67 95       	ror	r22
     a82:	b7 95       	ror	r27
     a84:	f7 95       	ror	r31
     a86:	9e 3f       	cpi	r25, 0xFE	; 254
     a88:	08 f0       	brcs	.+2      	; 0xa8c <__addsf3x+0x9a>
     a8a:	b0 cf       	rjmp	.-160    	; 0x9ec <__addsf3+0x28>
     a8c:	93 95       	inc	r25
     a8e:	88 0f       	add	r24, r24
     a90:	08 f0       	brcs	.+2      	; 0xa94 <__addsf3x+0xa2>
     a92:	99 27       	eor	r25, r25
     a94:	ee 0f       	add	r30, r30
     a96:	97 95       	ror	r25
     a98:	87 95       	ror	r24
     a9a:	08 95       	ret

00000a9c <__divsf3>:
     a9c:	0e 94 62 05 	call	0xac4	; 0xac4 <__divsf3x>
     aa0:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_round>
     aa4:	0e 94 43 06 	call	0xc86	; 0xc86 <__fp_pscB>
     aa8:	58 f0       	brcs	.+22     	; 0xac0 <__divsf3+0x24>
     aaa:	0e 94 3c 06 	call	0xc78	; 0xc78 <__fp_pscA>
     aae:	40 f0       	brcs	.+16     	; 0xac0 <__divsf3+0x24>
     ab0:	29 f4       	brne	.+10     	; 0xabc <__divsf3+0x20>
     ab2:	5f 3f       	cpi	r21, 0xFF	; 255
     ab4:	29 f0       	breq	.+10     	; 0xac0 <__divsf3+0x24>
     ab6:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__fp_inf>
     aba:	51 11       	cpse	r21, r1
     abc:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__fp_szero>
     ac0:	0c 94 39 06 	jmp	0xc72	; 0xc72 <__fp_nan>

00000ac4 <__divsf3x>:
     ac4:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <__fp_split3>
     ac8:	68 f3       	brcs	.-38     	; 0xaa4 <__divsf3+0x8>

00000aca <__divsf3_pse>:
     aca:	99 23       	and	r25, r25
     acc:	b1 f3       	breq	.-20     	; 0xaba <__divsf3+0x1e>
     ace:	55 23       	and	r21, r21
     ad0:	91 f3       	breq	.-28     	; 0xab6 <__divsf3+0x1a>
     ad2:	95 1b       	sub	r25, r21
     ad4:	55 0b       	sbc	r21, r21
     ad6:	bb 27       	eor	r27, r27
     ad8:	aa 27       	eor	r26, r26
     ada:	62 17       	cp	r22, r18
     adc:	73 07       	cpc	r23, r19
     ade:	84 07       	cpc	r24, r20
     ae0:	38 f0       	brcs	.+14     	; 0xaf0 <__divsf3_pse+0x26>
     ae2:	9f 5f       	subi	r25, 0xFF	; 255
     ae4:	5f 4f       	sbci	r21, 0xFF	; 255
     ae6:	22 0f       	add	r18, r18
     ae8:	33 1f       	adc	r19, r19
     aea:	44 1f       	adc	r20, r20
     aec:	aa 1f       	adc	r26, r26
     aee:	a9 f3       	breq	.-22     	; 0xada <__divsf3_pse+0x10>
     af0:	35 d0       	rcall	.+106    	; 0xb5c <__divsf3_pse+0x92>
     af2:	0e 2e       	mov	r0, r30
     af4:	3a f0       	brmi	.+14     	; 0xb04 <__divsf3_pse+0x3a>
     af6:	e0 e8       	ldi	r30, 0x80	; 128
     af8:	32 d0       	rcall	.+100    	; 0xb5e <__divsf3_pse+0x94>
     afa:	91 50       	subi	r25, 0x01	; 1
     afc:	50 40       	sbci	r21, 0x00	; 0
     afe:	e6 95       	lsr	r30
     b00:	00 1c       	adc	r0, r0
     b02:	ca f7       	brpl	.-14     	; 0xaf6 <__divsf3_pse+0x2c>
     b04:	2b d0       	rcall	.+86     	; 0xb5c <__divsf3_pse+0x92>
     b06:	fe 2f       	mov	r31, r30
     b08:	29 d0       	rcall	.+82     	; 0xb5c <__divsf3_pse+0x92>
     b0a:	66 0f       	add	r22, r22
     b0c:	77 1f       	adc	r23, r23
     b0e:	88 1f       	adc	r24, r24
     b10:	bb 1f       	adc	r27, r27
     b12:	26 17       	cp	r18, r22
     b14:	37 07       	cpc	r19, r23
     b16:	48 07       	cpc	r20, r24
     b18:	ab 07       	cpc	r26, r27
     b1a:	b0 e8       	ldi	r27, 0x80	; 128
     b1c:	09 f0       	breq	.+2      	; 0xb20 <__divsf3_pse+0x56>
     b1e:	bb 0b       	sbc	r27, r27
     b20:	80 2d       	mov	r24, r0
     b22:	bf 01       	movw	r22, r30
     b24:	ff 27       	eor	r31, r31
     b26:	93 58       	subi	r25, 0x83	; 131
     b28:	5f 4f       	sbci	r21, 0xFF	; 255
     b2a:	3a f0       	brmi	.+14     	; 0xb3a <__divsf3_pse+0x70>
     b2c:	9e 3f       	cpi	r25, 0xFE	; 254
     b2e:	51 05       	cpc	r21, r1
     b30:	78 f0       	brcs	.+30     	; 0xb50 <__divsf3_pse+0x86>
     b32:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__fp_inf>
     b36:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__fp_szero>
     b3a:	5f 3f       	cpi	r21, 0xFF	; 255
     b3c:	e4 f3       	brlt	.-8      	; 0xb36 <__divsf3_pse+0x6c>
     b3e:	98 3e       	cpi	r25, 0xE8	; 232
     b40:	d4 f3       	brlt	.-12     	; 0xb36 <__divsf3_pse+0x6c>
     b42:	86 95       	lsr	r24
     b44:	77 95       	ror	r23
     b46:	67 95       	ror	r22
     b48:	b7 95       	ror	r27
     b4a:	f7 95       	ror	r31
     b4c:	9f 5f       	subi	r25, 0xFF	; 255
     b4e:	c9 f7       	brne	.-14     	; 0xb42 <__divsf3_pse+0x78>
     b50:	88 0f       	add	r24, r24
     b52:	91 1d       	adc	r25, r1
     b54:	96 95       	lsr	r25
     b56:	87 95       	ror	r24
     b58:	97 f9       	bld	r25, 7
     b5a:	08 95       	ret
     b5c:	e1 e0       	ldi	r30, 0x01	; 1
     b5e:	66 0f       	add	r22, r22
     b60:	77 1f       	adc	r23, r23
     b62:	88 1f       	adc	r24, r24
     b64:	bb 1f       	adc	r27, r27
     b66:	62 17       	cp	r22, r18
     b68:	73 07       	cpc	r23, r19
     b6a:	84 07       	cpc	r24, r20
     b6c:	ba 07       	cpc	r27, r26
     b6e:	20 f0       	brcs	.+8      	; 0xb78 <__divsf3_pse+0xae>
     b70:	62 1b       	sub	r22, r18
     b72:	73 0b       	sbc	r23, r19
     b74:	84 0b       	sbc	r24, r20
     b76:	ba 0b       	sbc	r27, r26
     b78:	ee 1f       	adc	r30, r30
     b7a:	88 f7       	brcc	.-30     	; 0xb5e <__divsf3_pse+0x94>
     b7c:	e0 95       	com	r30
     b7e:	08 95       	ret

00000b80 <__fixsfsi>:
     b80:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fixunssfsi>
     b84:	68 94       	set
     b86:	b1 11       	cpse	r27, r1
     b88:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__fp_szero>
     b8c:	08 95       	ret

00000b8e <__fixunssfsi>:
     b8e:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fp_splitA>
     b92:	88 f0       	brcs	.+34     	; 0xbb6 <__fixunssfsi+0x28>
     b94:	9f 57       	subi	r25, 0x7F	; 127
     b96:	98 f0       	brcs	.+38     	; 0xbbe <__fixunssfsi+0x30>
     b98:	b9 2f       	mov	r27, r25
     b9a:	99 27       	eor	r25, r25
     b9c:	b7 51       	subi	r27, 0x17	; 23
     b9e:	b0 f0       	brcs	.+44     	; 0xbcc <__fixunssfsi+0x3e>
     ba0:	e1 f0       	breq	.+56     	; 0xbda <__fixunssfsi+0x4c>
     ba2:	66 0f       	add	r22, r22
     ba4:	77 1f       	adc	r23, r23
     ba6:	88 1f       	adc	r24, r24
     ba8:	99 1f       	adc	r25, r25
     baa:	1a f0       	brmi	.+6      	; 0xbb2 <__fixunssfsi+0x24>
     bac:	ba 95       	dec	r27
     bae:	c9 f7       	brne	.-14     	; 0xba2 <__fixunssfsi+0x14>
     bb0:	14 c0       	rjmp	.+40     	; 0xbda <__fixunssfsi+0x4c>
     bb2:	b1 30       	cpi	r27, 0x01	; 1
     bb4:	91 f0       	breq	.+36     	; 0xbda <__fixunssfsi+0x4c>
     bb6:	0e 94 7d 06 	call	0xcfa	; 0xcfa <__fp_zero>
     bba:	b1 e0       	ldi	r27, 0x01	; 1
     bbc:	08 95       	ret
     bbe:	0c 94 7d 06 	jmp	0xcfa	; 0xcfa <__fp_zero>
     bc2:	67 2f       	mov	r22, r23
     bc4:	78 2f       	mov	r23, r24
     bc6:	88 27       	eor	r24, r24
     bc8:	b8 5f       	subi	r27, 0xF8	; 248
     bca:	39 f0       	breq	.+14     	; 0xbda <__fixunssfsi+0x4c>
     bcc:	b9 3f       	cpi	r27, 0xF9	; 249
     bce:	cc f3       	brlt	.-14     	; 0xbc2 <__fixunssfsi+0x34>
     bd0:	86 95       	lsr	r24
     bd2:	77 95       	ror	r23
     bd4:	67 95       	ror	r22
     bd6:	b3 95       	inc	r27
     bd8:	d9 f7       	brne	.-10     	; 0xbd0 <__fixunssfsi+0x42>
     bda:	3e f4       	brtc	.+14     	; 0xbea <__fixunssfsi+0x5c>
     bdc:	90 95       	com	r25
     bde:	80 95       	com	r24
     be0:	70 95       	com	r23
     be2:	61 95       	neg	r22
     be4:	7f 4f       	sbci	r23, 0xFF	; 255
     be6:	8f 4f       	sbci	r24, 0xFF	; 255
     be8:	9f 4f       	sbci	r25, 0xFF	; 255
     bea:	08 95       	ret

00000bec <__floatunsisf>:
     bec:	e8 94       	clt
     bee:	09 c0       	rjmp	.+18     	; 0xc02 <__floatsisf+0x12>

00000bf0 <__floatsisf>:
     bf0:	97 fb       	bst	r25, 7
     bf2:	3e f4       	brtc	.+14     	; 0xc02 <__floatsisf+0x12>
     bf4:	90 95       	com	r25
     bf6:	80 95       	com	r24
     bf8:	70 95       	com	r23
     bfa:	61 95       	neg	r22
     bfc:	7f 4f       	sbci	r23, 0xFF	; 255
     bfe:	8f 4f       	sbci	r24, 0xFF	; 255
     c00:	9f 4f       	sbci	r25, 0xFF	; 255
     c02:	99 23       	and	r25, r25
     c04:	a9 f0       	breq	.+42     	; 0xc30 <__floatsisf+0x40>
     c06:	f9 2f       	mov	r31, r25
     c08:	96 e9       	ldi	r25, 0x96	; 150
     c0a:	bb 27       	eor	r27, r27
     c0c:	93 95       	inc	r25
     c0e:	f6 95       	lsr	r31
     c10:	87 95       	ror	r24
     c12:	77 95       	ror	r23
     c14:	67 95       	ror	r22
     c16:	b7 95       	ror	r27
     c18:	f1 11       	cpse	r31, r1
     c1a:	f8 cf       	rjmp	.-16     	; 0xc0c <__floatsisf+0x1c>
     c1c:	fa f4       	brpl	.+62     	; 0xc5c <__floatsisf+0x6c>
     c1e:	bb 0f       	add	r27, r27
     c20:	11 f4       	brne	.+4      	; 0xc26 <__floatsisf+0x36>
     c22:	60 ff       	sbrs	r22, 0
     c24:	1b c0       	rjmp	.+54     	; 0xc5c <__floatsisf+0x6c>
     c26:	6f 5f       	subi	r22, 0xFF	; 255
     c28:	7f 4f       	sbci	r23, 0xFF	; 255
     c2a:	8f 4f       	sbci	r24, 0xFF	; 255
     c2c:	9f 4f       	sbci	r25, 0xFF	; 255
     c2e:	16 c0       	rjmp	.+44     	; 0xc5c <__floatsisf+0x6c>
     c30:	88 23       	and	r24, r24
     c32:	11 f0       	breq	.+4      	; 0xc38 <__floatsisf+0x48>
     c34:	96 e9       	ldi	r25, 0x96	; 150
     c36:	11 c0       	rjmp	.+34     	; 0xc5a <__floatsisf+0x6a>
     c38:	77 23       	and	r23, r23
     c3a:	21 f0       	breq	.+8      	; 0xc44 <__floatsisf+0x54>
     c3c:	9e e8       	ldi	r25, 0x8E	; 142
     c3e:	87 2f       	mov	r24, r23
     c40:	76 2f       	mov	r23, r22
     c42:	05 c0       	rjmp	.+10     	; 0xc4e <__floatsisf+0x5e>
     c44:	66 23       	and	r22, r22
     c46:	71 f0       	breq	.+28     	; 0xc64 <__floatsisf+0x74>
     c48:	96 e8       	ldi	r25, 0x86	; 134
     c4a:	86 2f       	mov	r24, r22
     c4c:	70 e0       	ldi	r23, 0x00	; 0
     c4e:	60 e0       	ldi	r22, 0x00	; 0
     c50:	2a f0       	brmi	.+10     	; 0xc5c <__floatsisf+0x6c>
     c52:	9a 95       	dec	r25
     c54:	66 0f       	add	r22, r22
     c56:	77 1f       	adc	r23, r23
     c58:	88 1f       	adc	r24, r24
     c5a:	da f7       	brpl	.-10     	; 0xc52 <__floatsisf+0x62>
     c5c:	88 0f       	add	r24, r24
     c5e:	96 95       	lsr	r25
     c60:	87 95       	ror	r24
     c62:	97 f9       	bld	r25, 7
     c64:	08 95       	ret

00000c66 <__fp_inf>:
     c66:	97 f9       	bld	r25, 7
     c68:	9f 67       	ori	r25, 0x7F	; 127
     c6a:	80 e8       	ldi	r24, 0x80	; 128
     c6c:	70 e0       	ldi	r23, 0x00	; 0
     c6e:	60 e0       	ldi	r22, 0x00	; 0
     c70:	08 95       	ret

00000c72 <__fp_nan>:
     c72:	9f ef       	ldi	r25, 0xFF	; 255
     c74:	80 ec       	ldi	r24, 0xC0	; 192
     c76:	08 95       	ret

00000c78 <__fp_pscA>:
     c78:	00 24       	eor	r0, r0
     c7a:	0a 94       	dec	r0
     c7c:	16 16       	cp	r1, r22
     c7e:	17 06       	cpc	r1, r23
     c80:	18 06       	cpc	r1, r24
     c82:	09 06       	cpc	r0, r25
     c84:	08 95       	ret

00000c86 <__fp_pscB>:
     c86:	00 24       	eor	r0, r0
     c88:	0a 94       	dec	r0
     c8a:	12 16       	cp	r1, r18
     c8c:	13 06       	cpc	r1, r19
     c8e:	14 06       	cpc	r1, r20
     c90:	05 06       	cpc	r0, r21
     c92:	08 95       	ret

00000c94 <__fp_round>:
     c94:	09 2e       	mov	r0, r25
     c96:	03 94       	inc	r0
     c98:	00 0c       	add	r0, r0
     c9a:	11 f4       	brne	.+4      	; 0xca0 <__fp_round+0xc>
     c9c:	88 23       	and	r24, r24
     c9e:	52 f0       	brmi	.+20     	; 0xcb4 <__fp_round+0x20>
     ca0:	bb 0f       	add	r27, r27
     ca2:	40 f4       	brcc	.+16     	; 0xcb4 <__fp_round+0x20>
     ca4:	bf 2b       	or	r27, r31
     ca6:	11 f4       	brne	.+4      	; 0xcac <__fp_round+0x18>
     ca8:	60 ff       	sbrs	r22, 0
     caa:	04 c0       	rjmp	.+8      	; 0xcb4 <__fp_round+0x20>
     cac:	6f 5f       	subi	r22, 0xFF	; 255
     cae:	7f 4f       	sbci	r23, 0xFF	; 255
     cb0:	8f 4f       	sbci	r24, 0xFF	; 255
     cb2:	9f 4f       	sbci	r25, 0xFF	; 255
     cb4:	08 95       	ret

00000cb6 <__fp_split3>:
     cb6:	57 fd       	sbrc	r21, 7
     cb8:	90 58       	subi	r25, 0x80	; 128
     cba:	44 0f       	add	r20, r20
     cbc:	55 1f       	adc	r21, r21
     cbe:	59 f0       	breq	.+22     	; 0xcd6 <__fp_splitA+0x10>
     cc0:	5f 3f       	cpi	r21, 0xFF	; 255
     cc2:	71 f0       	breq	.+28     	; 0xce0 <__fp_splitA+0x1a>
     cc4:	47 95       	ror	r20

00000cc6 <__fp_splitA>:
     cc6:	88 0f       	add	r24, r24
     cc8:	97 fb       	bst	r25, 7
     cca:	99 1f       	adc	r25, r25
     ccc:	61 f0       	breq	.+24     	; 0xce6 <__fp_splitA+0x20>
     cce:	9f 3f       	cpi	r25, 0xFF	; 255
     cd0:	79 f0       	breq	.+30     	; 0xcf0 <__fp_splitA+0x2a>
     cd2:	87 95       	ror	r24
     cd4:	08 95       	ret
     cd6:	12 16       	cp	r1, r18
     cd8:	13 06       	cpc	r1, r19
     cda:	14 06       	cpc	r1, r20
     cdc:	55 1f       	adc	r21, r21
     cde:	f2 cf       	rjmp	.-28     	; 0xcc4 <__fp_split3+0xe>
     ce0:	46 95       	lsr	r20
     ce2:	f1 df       	rcall	.-30     	; 0xcc6 <__fp_splitA>
     ce4:	08 c0       	rjmp	.+16     	; 0xcf6 <__fp_splitA+0x30>
     ce6:	16 16       	cp	r1, r22
     ce8:	17 06       	cpc	r1, r23
     cea:	18 06       	cpc	r1, r24
     cec:	99 1f       	adc	r25, r25
     cee:	f1 cf       	rjmp	.-30     	; 0xcd2 <__fp_splitA+0xc>
     cf0:	86 95       	lsr	r24
     cf2:	71 05       	cpc	r23, r1
     cf4:	61 05       	cpc	r22, r1
     cf6:	08 94       	sec
     cf8:	08 95       	ret

00000cfa <__fp_zero>:
     cfa:	e8 94       	clt

00000cfc <__fp_szero>:
     cfc:	bb 27       	eor	r27, r27
     cfe:	66 27       	eor	r22, r22
     d00:	77 27       	eor	r23, r23
     d02:	cb 01       	movw	r24, r22
     d04:	97 f9       	bld	r25, 7
     d06:	08 95       	ret

00000d08 <__mulsf3>:
     d08:	0e 94 97 06 	call	0xd2e	; 0xd2e <__mulsf3x>
     d0c:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_round>
     d10:	0e 94 3c 06 	call	0xc78	; 0xc78 <__fp_pscA>
     d14:	38 f0       	brcs	.+14     	; 0xd24 <__mulsf3+0x1c>
     d16:	0e 94 43 06 	call	0xc86	; 0xc86 <__fp_pscB>
     d1a:	20 f0       	brcs	.+8      	; 0xd24 <__mulsf3+0x1c>
     d1c:	95 23       	and	r25, r21
     d1e:	11 f0       	breq	.+4      	; 0xd24 <__mulsf3+0x1c>
     d20:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__fp_inf>
     d24:	0c 94 39 06 	jmp	0xc72	; 0xc72 <__fp_nan>
     d28:	11 24       	eor	r1, r1
     d2a:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__fp_szero>

00000d2e <__mulsf3x>:
     d2e:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <__fp_split3>
     d32:	70 f3       	brcs	.-36     	; 0xd10 <__mulsf3+0x8>

00000d34 <__mulsf3_pse>:
     d34:	95 9f       	mul	r25, r21
     d36:	c1 f3       	breq	.-16     	; 0xd28 <__mulsf3+0x20>
     d38:	95 0f       	add	r25, r21
     d3a:	50 e0       	ldi	r21, 0x00	; 0
     d3c:	55 1f       	adc	r21, r21
     d3e:	62 9f       	mul	r22, r18
     d40:	f0 01       	movw	r30, r0
     d42:	72 9f       	mul	r23, r18
     d44:	bb 27       	eor	r27, r27
     d46:	f0 0d       	add	r31, r0
     d48:	b1 1d       	adc	r27, r1
     d4a:	63 9f       	mul	r22, r19
     d4c:	aa 27       	eor	r26, r26
     d4e:	f0 0d       	add	r31, r0
     d50:	b1 1d       	adc	r27, r1
     d52:	aa 1f       	adc	r26, r26
     d54:	64 9f       	mul	r22, r20
     d56:	66 27       	eor	r22, r22
     d58:	b0 0d       	add	r27, r0
     d5a:	a1 1d       	adc	r26, r1
     d5c:	66 1f       	adc	r22, r22
     d5e:	82 9f       	mul	r24, r18
     d60:	22 27       	eor	r18, r18
     d62:	b0 0d       	add	r27, r0
     d64:	a1 1d       	adc	r26, r1
     d66:	62 1f       	adc	r22, r18
     d68:	73 9f       	mul	r23, r19
     d6a:	b0 0d       	add	r27, r0
     d6c:	a1 1d       	adc	r26, r1
     d6e:	62 1f       	adc	r22, r18
     d70:	83 9f       	mul	r24, r19
     d72:	a0 0d       	add	r26, r0
     d74:	61 1d       	adc	r22, r1
     d76:	22 1f       	adc	r18, r18
     d78:	74 9f       	mul	r23, r20
     d7a:	33 27       	eor	r19, r19
     d7c:	a0 0d       	add	r26, r0
     d7e:	61 1d       	adc	r22, r1
     d80:	23 1f       	adc	r18, r19
     d82:	84 9f       	mul	r24, r20
     d84:	60 0d       	add	r22, r0
     d86:	21 1d       	adc	r18, r1
     d88:	82 2f       	mov	r24, r18
     d8a:	76 2f       	mov	r23, r22
     d8c:	6a 2f       	mov	r22, r26
     d8e:	11 24       	eor	r1, r1
     d90:	9f 57       	subi	r25, 0x7F	; 127
     d92:	50 40       	sbci	r21, 0x00	; 0
     d94:	9a f0       	brmi	.+38     	; 0xdbc <__mulsf3_pse+0x88>
     d96:	f1 f0       	breq	.+60     	; 0xdd4 <__mulsf3_pse+0xa0>
     d98:	88 23       	and	r24, r24
     d9a:	4a f0       	brmi	.+18     	; 0xdae <__mulsf3_pse+0x7a>
     d9c:	ee 0f       	add	r30, r30
     d9e:	ff 1f       	adc	r31, r31
     da0:	bb 1f       	adc	r27, r27
     da2:	66 1f       	adc	r22, r22
     da4:	77 1f       	adc	r23, r23
     da6:	88 1f       	adc	r24, r24
     da8:	91 50       	subi	r25, 0x01	; 1
     daa:	50 40       	sbci	r21, 0x00	; 0
     dac:	a9 f7       	brne	.-22     	; 0xd98 <__mulsf3_pse+0x64>
     dae:	9e 3f       	cpi	r25, 0xFE	; 254
     db0:	51 05       	cpc	r21, r1
     db2:	80 f0       	brcs	.+32     	; 0xdd4 <__mulsf3_pse+0xa0>
     db4:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__fp_inf>
     db8:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__fp_szero>
     dbc:	5f 3f       	cpi	r21, 0xFF	; 255
     dbe:	e4 f3       	brlt	.-8      	; 0xdb8 <__mulsf3_pse+0x84>
     dc0:	98 3e       	cpi	r25, 0xE8	; 232
     dc2:	d4 f3       	brlt	.-12     	; 0xdb8 <__mulsf3_pse+0x84>
     dc4:	86 95       	lsr	r24
     dc6:	77 95       	ror	r23
     dc8:	67 95       	ror	r22
     dca:	b7 95       	ror	r27
     dcc:	f7 95       	ror	r31
     dce:	e7 95       	ror	r30
     dd0:	9f 5f       	subi	r25, 0xFF	; 255
     dd2:	c1 f7       	brne	.-16     	; 0xdc4 <__mulsf3_pse+0x90>
     dd4:	fe 2b       	or	r31, r30
     dd6:	88 0f       	add	r24, r24
     dd8:	91 1d       	adc	r25, r1
     dda:	96 95       	lsr	r25
     ddc:	87 95       	ror	r24
     dde:	97 f9       	bld	r25, 7
     de0:	08 95       	ret

00000de2 <round>:
     de2:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fp_splitA>
     de6:	e8 f0       	brcs	.+58     	; 0xe22 <round+0x40>
     de8:	9e 37       	cpi	r25, 0x7E	; 126
     dea:	e8 f0       	brcs	.+58     	; 0xe26 <round+0x44>
     dec:	96 39       	cpi	r25, 0x96	; 150
     dee:	b8 f4       	brcc	.+46     	; 0xe1e <round+0x3c>
     df0:	9e 38       	cpi	r25, 0x8E	; 142
     df2:	48 f4       	brcc	.+18     	; 0xe06 <round+0x24>
     df4:	67 2f       	mov	r22, r23
     df6:	78 2f       	mov	r23, r24
     df8:	88 27       	eor	r24, r24
     dfa:	98 5f       	subi	r25, 0xF8	; 248
     dfc:	f9 cf       	rjmp	.-14     	; 0xdf0 <round+0xe>
     dfe:	86 95       	lsr	r24
     e00:	77 95       	ror	r23
     e02:	67 95       	ror	r22
     e04:	93 95       	inc	r25
     e06:	95 39       	cpi	r25, 0x95	; 149
     e08:	d0 f3       	brcs	.-12     	; 0xdfe <round+0x1c>
     e0a:	b6 2f       	mov	r27, r22
     e0c:	b1 70       	andi	r27, 0x01	; 1
     e0e:	6b 0f       	add	r22, r27
     e10:	71 1d       	adc	r23, r1
     e12:	81 1d       	adc	r24, r1
     e14:	20 f4       	brcc	.+8      	; 0xe1e <round+0x3c>
     e16:	87 95       	ror	r24
     e18:	77 95       	ror	r23
     e1a:	67 95       	ror	r22
     e1c:	93 95       	inc	r25
     e1e:	0c 94 15 07 	jmp	0xe2a	; 0xe2a <__fp_mintl>
     e22:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__fp_mpack>
     e26:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__fp_szero>

00000e2a <__fp_mintl>:
     e2a:	88 23       	and	r24, r24
     e2c:	71 f4       	brne	.+28     	; 0xe4a <__fp_mintl+0x20>
     e2e:	77 23       	and	r23, r23
     e30:	21 f0       	breq	.+8      	; 0xe3a <__fp_mintl+0x10>
     e32:	98 50       	subi	r25, 0x08	; 8
     e34:	87 2b       	or	r24, r23
     e36:	76 2f       	mov	r23, r22
     e38:	07 c0       	rjmp	.+14     	; 0xe48 <__fp_mintl+0x1e>
     e3a:	66 23       	and	r22, r22
     e3c:	11 f4       	brne	.+4      	; 0xe42 <__fp_mintl+0x18>
     e3e:	99 27       	eor	r25, r25
     e40:	0d c0       	rjmp	.+26     	; 0xe5c <__fp_mintl+0x32>
     e42:	90 51       	subi	r25, 0x10	; 16
     e44:	86 2b       	or	r24, r22
     e46:	70 e0       	ldi	r23, 0x00	; 0
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	2a f0       	brmi	.+10     	; 0xe56 <__fp_mintl+0x2c>
     e4c:	9a 95       	dec	r25
     e4e:	66 0f       	add	r22, r22
     e50:	77 1f       	adc	r23, r23
     e52:	88 1f       	adc	r24, r24
     e54:	da f7       	brpl	.-10     	; 0xe4c <__fp_mintl+0x22>
     e56:	88 0f       	add	r24, r24
     e58:	96 95       	lsr	r25
     e5a:	87 95       	ror	r24
     e5c:	97 f9       	bld	r25, 7
     e5e:	08 95       	ret

00000e60 <__fp_mpack>:
     e60:	9f 3f       	cpi	r25, 0xFF	; 255
     e62:	31 f0       	breq	.+12     	; 0xe70 <__fp_mpack_finite+0xc>

00000e64 <__fp_mpack_finite>:
     e64:	91 50       	subi	r25, 0x01	; 1
     e66:	20 f4       	brcc	.+8      	; 0xe70 <__fp_mpack_finite+0xc>
     e68:	87 95       	ror	r24
     e6a:	77 95       	ror	r23
     e6c:	67 95       	ror	r22
     e6e:	b7 95       	ror	r27
     e70:	88 0f       	add	r24, r24
     e72:	91 1d       	adc	r25, r1
     e74:	96 95       	lsr	r25
     e76:	87 95       	ror	r24
     e78:	97 f9       	bld	r25, 7
     e7a:	08 95       	ret

00000e7c <__udivmodsi4>:
     e7c:	a1 e2       	ldi	r26, 0x21	; 33
     e7e:	1a 2e       	mov	r1, r26
     e80:	aa 1b       	sub	r26, r26
     e82:	bb 1b       	sub	r27, r27
     e84:	fd 01       	movw	r30, r26
     e86:	0d c0       	rjmp	.+26     	; 0xea2 <__udivmodsi4_ep>

00000e88 <__udivmodsi4_loop>:
     e88:	aa 1f       	adc	r26, r26
     e8a:	bb 1f       	adc	r27, r27
     e8c:	ee 1f       	adc	r30, r30
     e8e:	ff 1f       	adc	r31, r31
     e90:	a2 17       	cp	r26, r18
     e92:	b3 07       	cpc	r27, r19
     e94:	e4 07       	cpc	r30, r20
     e96:	f5 07       	cpc	r31, r21
     e98:	20 f0       	brcs	.+8      	; 0xea2 <__udivmodsi4_ep>
     e9a:	a2 1b       	sub	r26, r18
     e9c:	b3 0b       	sbc	r27, r19
     e9e:	e4 0b       	sbc	r30, r20
     ea0:	f5 0b       	sbc	r31, r21

00000ea2 <__udivmodsi4_ep>:
     ea2:	66 1f       	adc	r22, r22
     ea4:	77 1f       	adc	r23, r23
     ea6:	88 1f       	adc	r24, r24
     ea8:	99 1f       	adc	r25, r25
     eaa:	1a 94       	dec	r1
     eac:	69 f7       	brne	.-38     	; 0xe88 <__udivmodsi4_loop>
     eae:	60 95       	com	r22
     eb0:	70 95       	com	r23
     eb2:	80 95       	com	r24
     eb4:	90 95       	com	r25
     eb6:	9b 01       	movw	r18, r22
     eb8:	ac 01       	movw	r20, r24
     eba:	bd 01       	movw	r22, r26
     ebc:	cf 01       	movw	r24, r30
     ebe:	08 95       	ret

00000ec0 <__divmodsi4>:
     ec0:	05 2e       	mov	r0, r21
     ec2:	97 fb       	bst	r25, 7
     ec4:	1e f4       	brtc	.+6      	; 0xecc <__divmodsi4+0xc>
     ec6:	00 94       	com	r0
     ec8:	0e 94 77 07 	call	0xeee	; 0xeee <__negsi2>
     ecc:	57 fd       	sbrc	r21, 7
     ece:	07 d0       	rcall	.+14     	; 0xede <__divmodsi4_neg2>
     ed0:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__udivmodsi4>
     ed4:	07 fc       	sbrc	r0, 7
     ed6:	03 d0       	rcall	.+6      	; 0xede <__divmodsi4_neg2>
     ed8:	4e f4       	brtc	.+18     	; 0xeec <__divmodsi4_exit>
     eda:	0c 94 77 07 	jmp	0xeee	; 0xeee <__negsi2>

00000ede <__divmodsi4_neg2>:
     ede:	50 95       	com	r21
     ee0:	40 95       	com	r20
     ee2:	30 95       	com	r19
     ee4:	21 95       	neg	r18
     ee6:	3f 4f       	sbci	r19, 0xFF	; 255
     ee8:	4f 4f       	sbci	r20, 0xFF	; 255
     eea:	5f 4f       	sbci	r21, 0xFF	; 255

00000eec <__divmodsi4_exit>:
     eec:	08 95       	ret

00000eee <__negsi2>:
     eee:	90 95       	com	r25
     ef0:	80 95       	com	r24
     ef2:	70 95       	com	r23
     ef4:	61 95       	neg	r22
     ef6:	7f 4f       	sbci	r23, 0xFF	; 255
     ef8:	8f 4f       	sbci	r24, 0xFF	; 255
     efa:	9f 4f       	sbci	r25, 0xFF	; 255
     efc:	08 95       	ret

00000efe <__umulhisi3>:
     efe:	a2 9f       	mul	r26, r18
     f00:	b0 01       	movw	r22, r0
     f02:	b3 9f       	mul	r27, r19
     f04:	c0 01       	movw	r24, r0
     f06:	a3 9f       	mul	r26, r19
     f08:	70 0d       	add	r23, r0
     f0a:	81 1d       	adc	r24, r1
     f0c:	11 24       	eor	r1, r1
     f0e:	91 1d       	adc	r25, r1
     f10:	b2 9f       	mul	r27, r18
     f12:	70 0d       	add	r23, r0
     f14:	81 1d       	adc	r24, r1
     f16:	11 24       	eor	r1, r1
     f18:	91 1d       	adc	r25, r1
     f1a:	08 95       	ret

00000f1c <sprintf>:
     f1c:	ae e0       	ldi	r26, 0x0E	; 14
     f1e:	b0 e0       	ldi	r27, 0x00	; 0
     f20:	e4 e9       	ldi	r30, 0x94	; 148
     f22:	f7 e0       	ldi	r31, 0x07	; 7
     f24:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__prologue_saves__+0x1c>
     f28:	0d 89       	ldd	r16, Y+21	; 0x15
     f2a:	1e 89       	ldd	r17, Y+22	; 0x16
     f2c:	86 e0       	ldi	r24, 0x06	; 6
     f2e:	8c 83       	std	Y+4, r24	; 0x04
     f30:	1a 83       	std	Y+2, r17	; 0x02
     f32:	09 83       	std	Y+1, r16	; 0x01
     f34:	8f ef       	ldi	r24, 0xFF	; 255
     f36:	9f e7       	ldi	r25, 0x7F	; 127
     f38:	9e 83       	std	Y+6, r25	; 0x06
     f3a:	8d 83       	std	Y+5, r24	; 0x05
     f3c:	ae 01       	movw	r20, r28
     f3e:	47 5e       	subi	r20, 0xE7	; 231
     f40:	5f 4f       	sbci	r21, 0xFF	; 255
     f42:	6f 89       	ldd	r22, Y+23	; 0x17
     f44:	78 8d       	ldd	r23, Y+24	; 0x18
     f46:	ce 01       	movw	r24, r28
     f48:	01 96       	adiw	r24, 0x01	; 1
     f4a:	0e 94 b0 07 	call	0xf60	; 0xf60 <vfprintf>
     f4e:	ef 81       	ldd	r30, Y+7	; 0x07
     f50:	f8 85       	ldd	r31, Y+8	; 0x08
     f52:	e0 0f       	add	r30, r16
     f54:	f1 1f       	adc	r31, r17
     f56:	10 82       	st	Z, r1
     f58:	2e 96       	adiw	r28, 0x0e	; 14
     f5a:	e4 e0       	ldi	r30, 0x04	; 4
     f5c:	0c 94 6b 0a 	jmp	0x14d6	; 0x14d6 <__epilogue_restores__+0x1c>

00000f60 <vfprintf>:
     f60:	ab e0       	ldi	r26, 0x0B	; 11
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	e6 eb       	ldi	r30, 0xB6	; 182
     f66:	f7 e0       	ldi	r31, 0x07	; 7
     f68:	0c 94 41 0a 	jmp	0x1482	; 0x1482 <__prologue_saves__>
     f6c:	6c 01       	movw	r12, r24
     f6e:	7b 01       	movw	r14, r22
     f70:	8a 01       	movw	r16, r20
     f72:	fc 01       	movw	r30, r24
     f74:	17 82       	std	Z+7, r1	; 0x07
     f76:	16 82       	std	Z+6, r1	; 0x06
     f78:	83 81       	ldd	r24, Z+3	; 0x03
     f7a:	81 ff       	sbrs	r24, 1
     f7c:	cc c1       	rjmp	.+920    	; 0x1316 <vfprintf+0x3b6>
     f7e:	ce 01       	movw	r24, r28
     f80:	01 96       	adiw	r24, 0x01	; 1
     f82:	3c 01       	movw	r6, r24
     f84:	f6 01       	movw	r30, r12
     f86:	93 81       	ldd	r25, Z+3	; 0x03
     f88:	f7 01       	movw	r30, r14
     f8a:	93 fd       	sbrc	r25, 3
     f8c:	85 91       	lpm	r24, Z+
     f8e:	93 ff       	sbrs	r25, 3
     f90:	81 91       	ld	r24, Z+
     f92:	7f 01       	movw	r14, r30
     f94:	88 23       	and	r24, r24
     f96:	09 f4       	brne	.+2      	; 0xf9a <vfprintf+0x3a>
     f98:	ba c1       	rjmp	.+884    	; 0x130e <vfprintf+0x3ae>
     f9a:	85 32       	cpi	r24, 0x25	; 37
     f9c:	39 f4       	brne	.+14     	; 0xfac <vfprintf+0x4c>
     f9e:	93 fd       	sbrc	r25, 3
     fa0:	85 91       	lpm	r24, Z+
     fa2:	93 ff       	sbrs	r25, 3
     fa4:	81 91       	ld	r24, Z+
     fa6:	7f 01       	movw	r14, r30
     fa8:	85 32       	cpi	r24, 0x25	; 37
     faa:	29 f4       	brne	.+10     	; 0xfb6 <vfprintf+0x56>
     fac:	b6 01       	movw	r22, r12
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
     fb4:	e7 cf       	rjmp	.-50     	; 0xf84 <vfprintf+0x24>
     fb6:	91 2c       	mov	r9, r1
     fb8:	21 2c       	mov	r2, r1
     fba:	31 2c       	mov	r3, r1
     fbc:	ff e1       	ldi	r31, 0x1F	; 31
     fbe:	f3 15       	cp	r31, r3
     fc0:	d8 f0       	brcs	.+54     	; 0xff8 <vfprintf+0x98>
     fc2:	8b 32       	cpi	r24, 0x2B	; 43
     fc4:	79 f0       	breq	.+30     	; 0xfe4 <vfprintf+0x84>
     fc6:	38 f4       	brcc	.+14     	; 0xfd6 <vfprintf+0x76>
     fc8:	80 32       	cpi	r24, 0x20	; 32
     fca:	79 f0       	breq	.+30     	; 0xfea <vfprintf+0x8a>
     fcc:	83 32       	cpi	r24, 0x23	; 35
     fce:	a1 f4       	brne	.+40     	; 0xff8 <vfprintf+0x98>
     fd0:	23 2d       	mov	r18, r3
     fd2:	20 61       	ori	r18, 0x10	; 16
     fd4:	1d c0       	rjmp	.+58     	; 0x1010 <vfprintf+0xb0>
     fd6:	8d 32       	cpi	r24, 0x2D	; 45
     fd8:	61 f0       	breq	.+24     	; 0xff2 <vfprintf+0x92>
     fda:	80 33       	cpi	r24, 0x30	; 48
     fdc:	69 f4       	brne	.+26     	; 0xff8 <vfprintf+0x98>
     fde:	23 2d       	mov	r18, r3
     fe0:	21 60       	ori	r18, 0x01	; 1
     fe2:	16 c0       	rjmp	.+44     	; 0x1010 <vfprintf+0xb0>
     fe4:	83 2d       	mov	r24, r3
     fe6:	82 60       	ori	r24, 0x02	; 2
     fe8:	38 2e       	mov	r3, r24
     fea:	e3 2d       	mov	r30, r3
     fec:	e4 60       	ori	r30, 0x04	; 4
     fee:	3e 2e       	mov	r3, r30
     ff0:	2a c0       	rjmp	.+84     	; 0x1046 <vfprintf+0xe6>
     ff2:	f3 2d       	mov	r31, r3
     ff4:	f8 60       	ori	r31, 0x08	; 8
     ff6:	1d c0       	rjmp	.+58     	; 0x1032 <vfprintf+0xd2>
     ff8:	37 fc       	sbrc	r3, 7
     ffa:	2d c0       	rjmp	.+90     	; 0x1056 <vfprintf+0xf6>
     ffc:	20 ed       	ldi	r18, 0xD0	; 208
     ffe:	28 0f       	add	r18, r24
    1000:	2a 30       	cpi	r18, 0x0A	; 10
    1002:	40 f0       	brcs	.+16     	; 0x1014 <vfprintf+0xb4>
    1004:	8e 32       	cpi	r24, 0x2E	; 46
    1006:	b9 f4       	brne	.+46     	; 0x1036 <vfprintf+0xd6>
    1008:	36 fc       	sbrc	r3, 6
    100a:	81 c1       	rjmp	.+770    	; 0x130e <vfprintf+0x3ae>
    100c:	23 2d       	mov	r18, r3
    100e:	20 64       	ori	r18, 0x40	; 64
    1010:	32 2e       	mov	r3, r18
    1012:	19 c0       	rjmp	.+50     	; 0x1046 <vfprintf+0xe6>
    1014:	36 fe       	sbrs	r3, 6
    1016:	06 c0       	rjmp	.+12     	; 0x1024 <vfprintf+0xc4>
    1018:	8a e0       	ldi	r24, 0x0A	; 10
    101a:	98 9e       	mul	r9, r24
    101c:	20 0d       	add	r18, r0
    101e:	11 24       	eor	r1, r1
    1020:	92 2e       	mov	r9, r18
    1022:	11 c0       	rjmp	.+34     	; 0x1046 <vfprintf+0xe6>
    1024:	ea e0       	ldi	r30, 0x0A	; 10
    1026:	2e 9e       	mul	r2, r30
    1028:	20 0d       	add	r18, r0
    102a:	11 24       	eor	r1, r1
    102c:	22 2e       	mov	r2, r18
    102e:	f3 2d       	mov	r31, r3
    1030:	f0 62       	ori	r31, 0x20	; 32
    1032:	3f 2e       	mov	r3, r31
    1034:	08 c0       	rjmp	.+16     	; 0x1046 <vfprintf+0xe6>
    1036:	8c 36       	cpi	r24, 0x6C	; 108
    1038:	21 f4       	brne	.+8      	; 0x1042 <vfprintf+0xe2>
    103a:	83 2d       	mov	r24, r3
    103c:	80 68       	ori	r24, 0x80	; 128
    103e:	38 2e       	mov	r3, r24
    1040:	02 c0       	rjmp	.+4      	; 0x1046 <vfprintf+0xe6>
    1042:	88 36       	cpi	r24, 0x68	; 104
    1044:	41 f4       	brne	.+16     	; 0x1056 <vfprintf+0xf6>
    1046:	f7 01       	movw	r30, r14
    1048:	93 fd       	sbrc	r25, 3
    104a:	85 91       	lpm	r24, Z+
    104c:	93 ff       	sbrs	r25, 3
    104e:	81 91       	ld	r24, Z+
    1050:	7f 01       	movw	r14, r30
    1052:	81 11       	cpse	r24, r1
    1054:	b3 cf       	rjmp	.-154    	; 0xfbc <vfprintf+0x5c>
    1056:	98 2f       	mov	r25, r24
    1058:	9f 7d       	andi	r25, 0xDF	; 223
    105a:	95 54       	subi	r25, 0x45	; 69
    105c:	93 30       	cpi	r25, 0x03	; 3
    105e:	28 f4       	brcc	.+10     	; 0x106a <vfprintf+0x10a>
    1060:	0c 5f       	subi	r16, 0xFC	; 252
    1062:	1f 4f       	sbci	r17, 0xFF	; 255
    1064:	9f e3       	ldi	r25, 0x3F	; 63
    1066:	99 83       	std	Y+1, r25	; 0x01
    1068:	0d c0       	rjmp	.+26     	; 0x1084 <vfprintf+0x124>
    106a:	83 36       	cpi	r24, 0x63	; 99
    106c:	31 f0       	breq	.+12     	; 0x107a <vfprintf+0x11a>
    106e:	83 37       	cpi	r24, 0x73	; 115
    1070:	71 f0       	breq	.+28     	; 0x108e <vfprintf+0x12e>
    1072:	83 35       	cpi	r24, 0x53	; 83
    1074:	09 f0       	breq	.+2      	; 0x1078 <vfprintf+0x118>
    1076:	59 c0       	rjmp	.+178    	; 0x112a <vfprintf+0x1ca>
    1078:	21 c0       	rjmp	.+66     	; 0x10bc <vfprintf+0x15c>
    107a:	f8 01       	movw	r30, r16
    107c:	80 81       	ld	r24, Z
    107e:	89 83       	std	Y+1, r24	; 0x01
    1080:	0e 5f       	subi	r16, 0xFE	; 254
    1082:	1f 4f       	sbci	r17, 0xFF	; 255
    1084:	88 24       	eor	r8, r8
    1086:	83 94       	inc	r8
    1088:	91 2c       	mov	r9, r1
    108a:	53 01       	movw	r10, r6
    108c:	13 c0       	rjmp	.+38     	; 0x10b4 <vfprintf+0x154>
    108e:	28 01       	movw	r4, r16
    1090:	f2 e0       	ldi	r31, 0x02	; 2
    1092:	4f 0e       	add	r4, r31
    1094:	51 1c       	adc	r5, r1
    1096:	f8 01       	movw	r30, r16
    1098:	a0 80       	ld	r10, Z
    109a:	b1 80       	ldd	r11, Z+1	; 0x01
    109c:	36 fe       	sbrs	r3, 6
    109e:	03 c0       	rjmp	.+6      	; 0x10a6 <vfprintf+0x146>
    10a0:	69 2d       	mov	r22, r9
    10a2:	70 e0       	ldi	r23, 0x00	; 0
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <vfprintf+0x14a>
    10a6:	6f ef       	ldi	r22, 0xFF	; 255
    10a8:	7f ef       	ldi	r23, 0xFF	; 255
    10aa:	c5 01       	movw	r24, r10
    10ac:	0e 94 9c 09 	call	0x1338	; 0x1338 <strnlen>
    10b0:	4c 01       	movw	r8, r24
    10b2:	82 01       	movw	r16, r4
    10b4:	f3 2d       	mov	r31, r3
    10b6:	ff 77       	andi	r31, 0x7F	; 127
    10b8:	3f 2e       	mov	r3, r31
    10ba:	16 c0       	rjmp	.+44     	; 0x10e8 <vfprintf+0x188>
    10bc:	28 01       	movw	r4, r16
    10be:	22 e0       	ldi	r18, 0x02	; 2
    10c0:	42 0e       	add	r4, r18
    10c2:	51 1c       	adc	r5, r1
    10c4:	f8 01       	movw	r30, r16
    10c6:	a0 80       	ld	r10, Z
    10c8:	b1 80       	ldd	r11, Z+1	; 0x01
    10ca:	36 fe       	sbrs	r3, 6
    10cc:	03 c0       	rjmp	.+6      	; 0x10d4 <vfprintf+0x174>
    10ce:	69 2d       	mov	r22, r9
    10d0:	70 e0       	ldi	r23, 0x00	; 0
    10d2:	02 c0       	rjmp	.+4      	; 0x10d8 <vfprintf+0x178>
    10d4:	6f ef       	ldi	r22, 0xFF	; 255
    10d6:	7f ef       	ldi	r23, 0xFF	; 255
    10d8:	c5 01       	movw	r24, r10
    10da:	0e 94 91 09 	call	0x1322	; 0x1322 <strnlen_P>
    10de:	4c 01       	movw	r8, r24
    10e0:	f3 2d       	mov	r31, r3
    10e2:	f0 68       	ori	r31, 0x80	; 128
    10e4:	3f 2e       	mov	r3, r31
    10e6:	82 01       	movw	r16, r4
    10e8:	33 fc       	sbrc	r3, 3
    10ea:	1b c0       	rjmp	.+54     	; 0x1122 <vfprintf+0x1c2>
    10ec:	82 2d       	mov	r24, r2
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	88 16       	cp	r8, r24
    10f2:	99 06       	cpc	r9, r25
    10f4:	b0 f4       	brcc	.+44     	; 0x1122 <vfprintf+0x1c2>
    10f6:	b6 01       	movw	r22, r12
    10f8:	80 e2       	ldi	r24, 0x20	; 32
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    1100:	2a 94       	dec	r2
    1102:	f4 cf       	rjmp	.-24     	; 0x10ec <vfprintf+0x18c>
    1104:	f5 01       	movw	r30, r10
    1106:	37 fc       	sbrc	r3, 7
    1108:	85 91       	lpm	r24, Z+
    110a:	37 fe       	sbrs	r3, 7
    110c:	81 91       	ld	r24, Z+
    110e:	5f 01       	movw	r10, r30
    1110:	b6 01       	movw	r22, r12
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    1118:	21 10       	cpse	r2, r1
    111a:	2a 94       	dec	r2
    111c:	21 e0       	ldi	r18, 0x01	; 1
    111e:	82 1a       	sub	r8, r18
    1120:	91 08       	sbc	r9, r1
    1122:	81 14       	cp	r8, r1
    1124:	91 04       	cpc	r9, r1
    1126:	71 f7       	brne	.-36     	; 0x1104 <vfprintf+0x1a4>
    1128:	e8 c0       	rjmp	.+464    	; 0x12fa <vfprintf+0x39a>
    112a:	84 36       	cpi	r24, 0x64	; 100
    112c:	11 f0       	breq	.+4      	; 0x1132 <vfprintf+0x1d2>
    112e:	89 36       	cpi	r24, 0x69	; 105
    1130:	41 f5       	brne	.+80     	; 0x1182 <vfprintf+0x222>
    1132:	f8 01       	movw	r30, r16
    1134:	37 fe       	sbrs	r3, 7
    1136:	07 c0       	rjmp	.+14     	; 0x1146 <vfprintf+0x1e6>
    1138:	60 81       	ld	r22, Z
    113a:	71 81       	ldd	r23, Z+1	; 0x01
    113c:	82 81       	ldd	r24, Z+2	; 0x02
    113e:	93 81       	ldd	r25, Z+3	; 0x03
    1140:	0c 5f       	subi	r16, 0xFC	; 252
    1142:	1f 4f       	sbci	r17, 0xFF	; 255
    1144:	08 c0       	rjmp	.+16     	; 0x1156 <vfprintf+0x1f6>
    1146:	60 81       	ld	r22, Z
    1148:	71 81       	ldd	r23, Z+1	; 0x01
    114a:	07 2e       	mov	r0, r23
    114c:	00 0c       	add	r0, r0
    114e:	88 0b       	sbc	r24, r24
    1150:	99 0b       	sbc	r25, r25
    1152:	0e 5f       	subi	r16, 0xFE	; 254
    1154:	1f 4f       	sbci	r17, 0xFF	; 255
    1156:	f3 2d       	mov	r31, r3
    1158:	ff 76       	andi	r31, 0x6F	; 111
    115a:	3f 2e       	mov	r3, r31
    115c:	97 ff       	sbrs	r25, 7
    115e:	09 c0       	rjmp	.+18     	; 0x1172 <vfprintf+0x212>
    1160:	90 95       	com	r25
    1162:	80 95       	com	r24
    1164:	70 95       	com	r23
    1166:	61 95       	neg	r22
    1168:	7f 4f       	sbci	r23, 0xFF	; 255
    116a:	8f 4f       	sbci	r24, 0xFF	; 255
    116c:	9f 4f       	sbci	r25, 0xFF	; 255
    116e:	f0 68       	ori	r31, 0x80	; 128
    1170:	3f 2e       	mov	r3, r31
    1172:	2a e0       	ldi	r18, 0x0A	; 10
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	a3 01       	movw	r20, r6
    1178:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__ultoa_invert>
    117c:	88 2e       	mov	r8, r24
    117e:	86 18       	sub	r8, r6
    1180:	45 c0       	rjmp	.+138    	; 0x120c <vfprintf+0x2ac>
    1182:	85 37       	cpi	r24, 0x75	; 117
    1184:	31 f4       	brne	.+12     	; 0x1192 <vfprintf+0x232>
    1186:	23 2d       	mov	r18, r3
    1188:	2f 7e       	andi	r18, 0xEF	; 239
    118a:	b2 2e       	mov	r11, r18
    118c:	2a e0       	ldi	r18, 0x0A	; 10
    118e:	30 e0       	ldi	r19, 0x00	; 0
    1190:	25 c0       	rjmp	.+74     	; 0x11dc <vfprintf+0x27c>
    1192:	93 2d       	mov	r25, r3
    1194:	99 7f       	andi	r25, 0xF9	; 249
    1196:	b9 2e       	mov	r11, r25
    1198:	8f 36       	cpi	r24, 0x6F	; 111
    119a:	c1 f0       	breq	.+48     	; 0x11cc <vfprintf+0x26c>
    119c:	18 f4       	brcc	.+6      	; 0x11a4 <vfprintf+0x244>
    119e:	88 35       	cpi	r24, 0x58	; 88
    11a0:	79 f0       	breq	.+30     	; 0x11c0 <vfprintf+0x260>
    11a2:	b5 c0       	rjmp	.+362    	; 0x130e <vfprintf+0x3ae>
    11a4:	80 37       	cpi	r24, 0x70	; 112
    11a6:	19 f0       	breq	.+6      	; 0x11ae <vfprintf+0x24e>
    11a8:	88 37       	cpi	r24, 0x78	; 120
    11aa:	21 f0       	breq	.+8      	; 0x11b4 <vfprintf+0x254>
    11ac:	b0 c0       	rjmp	.+352    	; 0x130e <vfprintf+0x3ae>
    11ae:	e9 2f       	mov	r30, r25
    11b0:	e0 61       	ori	r30, 0x10	; 16
    11b2:	be 2e       	mov	r11, r30
    11b4:	b4 fe       	sbrs	r11, 4
    11b6:	0d c0       	rjmp	.+26     	; 0x11d2 <vfprintf+0x272>
    11b8:	fb 2d       	mov	r31, r11
    11ba:	f4 60       	ori	r31, 0x04	; 4
    11bc:	bf 2e       	mov	r11, r31
    11be:	09 c0       	rjmp	.+18     	; 0x11d2 <vfprintf+0x272>
    11c0:	34 fe       	sbrs	r3, 4
    11c2:	0a c0       	rjmp	.+20     	; 0x11d8 <vfprintf+0x278>
    11c4:	29 2f       	mov	r18, r25
    11c6:	26 60       	ori	r18, 0x06	; 6
    11c8:	b2 2e       	mov	r11, r18
    11ca:	06 c0       	rjmp	.+12     	; 0x11d8 <vfprintf+0x278>
    11cc:	28 e0       	ldi	r18, 0x08	; 8
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	05 c0       	rjmp	.+10     	; 0x11dc <vfprintf+0x27c>
    11d2:	20 e1       	ldi	r18, 0x10	; 16
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <vfprintf+0x27c>
    11d8:	20 e1       	ldi	r18, 0x10	; 16
    11da:	32 e0       	ldi	r19, 0x02	; 2
    11dc:	f8 01       	movw	r30, r16
    11de:	b7 fe       	sbrs	r11, 7
    11e0:	07 c0       	rjmp	.+14     	; 0x11f0 <vfprintf+0x290>
    11e2:	60 81       	ld	r22, Z
    11e4:	71 81       	ldd	r23, Z+1	; 0x01
    11e6:	82 81       	ldd	r24, Z+2	; 0x02
    11e8:	93 81       	ldd	r25, Z+3	; 0x03
    11ea:	0c 5f       	subi	r16, 0xFC	; 252
    11ec:	1f 4f       	sbci	r17, 0xFF	; 255
    11ee:	06 c0       	rjmp	.+12     	; 0x11fc <vfprintf+0x29c>
    11f0:	60 81       	ld	r22, Z
    11f2:	71 81       	ldd	r23, Z+1	; 0x01
    11f4:	80 e0       	ldi	r24, 0x00	; 0
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	0e 5f       	subi	r16, 0xFE	; 254
    11fa:	1f 4f       	sbci	r17, 0xFF	; 255
    11fc:	a3 01       	movw	r20, r6
    11fe:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__ultoa_invert>
    1202:	88 2e       	mov	r8, r24
    1204:	86 18       	sub	r8, r6
    1206:	fb 2d       	mov	r31, r11
    1208:	ff 77       	andi	r31, 0x7F	; 127
    120a:	3f 2e       	mov	r3, r31
    120c:	36 fe       	sbrs	r3, 6
    120e:	0d c0       	rjmp	.+26     	; 0x122a <vfprintf+0x2ca>
    1210:	23 2d       	mov	r18, r3
    1212:	2e 7f       	andi	r18, 0xFE	; 254
    1214:	a2 2e       	mov	r10, r18
    1216:	89 14       	cp	r8, r9
    1218:	58 f4       	brcc	.+22     	; 0x1230 <vfprintf+0x2d0>
    121a:	34 fe       	sbrs	r3, 4
    121c:	0b c0       	rjmp	.+22     	; 0x1234 <vfprintf+0x2d4>
    121e:	32 fc       	sbrc	r3, 2
    1220:	09 c0       	rjmp	.+18     	; 0x1234 <vfprintf+0x2d4>
    1222:	83 2d       	mov	r24, r3
    1224:	8e 7e       	andi	r24, 0xEE	; 238
    1226:	a8 2e       	mov	r10, r24
    1228:	05 c0       	rjmp	.+10     	; 0x1234 <vfprintf+0x2d4>
    122a:	b8 2c       	mov	r11, r8
    122c:	a3 2c       	mov	r10, r3
    122e:	03 c0       	rjmp	.+6      	; 0x1236 <vfprintf+0x2d6>
    1230:	b8 2c       	mov	r11, r8
    1232:	01 c0       	rjmp	.+2      	; 0x1236 <vfprintf+0x2d6>
    1234:	b9 2c       	mov	r11, r9
    1236:	a4 fe       	sbrs	r10, 4
    1238:	0f c0       	rjmp	.+30     	; 0x1258 <vfprintf+0x2f8>
    123a:	fe 01       	movw	r30, r28
    123c:	e8 0d       	add	r30, r8
    123e:	f1 1d       	adc	r31, r1
    1240:	80 81       	ld	r24, Z
    1242:	80 33       	cpi	r24, 0x30	; 48
    1244:	21 f4       	brne	.+8      	; 0x124e <vfprintf+0x2ee>
    1246:	9a 2d       	mov	r25, r10
    1248:	99 7e       	andi	r25, 0xE9	; 233
    124a:	a9 2e       	mov	r10, r25
    124c:	09 c0       	rjmp	.+18     	; 0x1260 <vfprintf+0x300>
    124e:	a2 fe       	sbrs	r10, 2
    1250:	06 c0       	rjmp	.+12     	; 0x125e <vfprintf+0x2fe>
    1252:	b3 94       	inc	r11
    1254:	b3 94       	inc	r11
    1256:	04 c0       	rjmp	.+8      	; 0x1260 <vfprintf+0x300>
    1258:	8a 2d       	mov	r24, r10
    125a:	86 78       	andi	r24, 0x86	; 134
    125c:	09 f0       	breq	.+2      	; 0x1260 <vfprintf+0x300>
    125e:	b3 94       	inc	r11
    1260:	a3 fc       	sbrc	r10, 3
    1262:	11 c0       	rjmp	.+34     	; 0x1286 <vfprintf+0x326>
    1264:	a0 fe       	sbrs	r10, 0
    1266:	06 c0       	rjmp	.+12     	; 0x1274 <vfprintf+0x314>
    1268:	b2 14       	cp	r11, r2
    126a:	88 f4       	brcc	.+34     	; 0x128e <vfprintf+0x32e>
    126c:	28 0c       	add	r2, r8
    126e:	92 2c       	mov	r9, r2
    1270:	9b 18       	sub	r9, r11
    1272:	0e c0       	rjmp	.+28     	; 0x1290 <vfprintf+0x330>
    1274:	b2 14       	cp	r11, r2
    1276:	60 f4       	brcc	.+24     	; 0x1290 <vfprintf+0x330>
    1278:	b6 01       	movw	r22, r12
    127a:	80 e2       	ldi	r24, 0x20	; 32
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    1282:	b3 94       	inc	r11
    1284:	f7 cf       	rjmp	.-18     	; 0x1274 <vfprintf+0x314>
    1286:	b2 14       	cp	r11, r2
    1288:	18 f4       	brcc	.+6      	; 0x1290 <vfprintf+0x330>
    128a:	2b 18       	sub	r2, r11
    128c:	02 c0       	rjmp	.+4      	; 0x1292 <vfprintf+0x332>
    128e:	98 2c       	mov	r9, r8
    1290:	21 2c       	mov	r2, r1
    1292:	a4 fe       	sbrs	r10, 4
    1294:	10 c0       	rjmp	.+32     	; 0x12b6 <vfprintf+0x356>
    1296:	b6 01       	movw	r22, r12
    1298:	80 e3       	ldi	r24, 0x30	; 48
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12a0:	a2 fe       	sbrs	r10, 2
    12a2:	17 c0       	rjmp	.+46     	; 0x12d2 <vfprintf+0x372>
    12a4:	a1 fc       	sbrc	r10, 1
    12a6:	03 c0       	rjmp	.+6      	; 0x12ae <vfprintf+0x34e>
    12a8:	88 e7       	ldi	r24, 0x78	; 120
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	02 c0       	rjmp	.+4      	; 0x12b2 <vfprintf+0x352>
    12ae:	88 e5       	ldi	r24, 0x58	; 88
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	b6 01       	movw	r22, r12
    12b4:	0c c0       	rjmp	.+24     	; 0x12ce <vfprintf+0x36e>
    12b6:	8a 2d       	mov	r24, r10
    12b8:	86 78       	andi	r24, 0x86	; 134
    12ba:	59 f0       	breq	.+22     	; 0x12d2 <vfprintf+0x372>
    12bc:	a1 fe       	sbrs	r10, 1
    12be:	02 c0       	rjmp	.+4      	; 0x12c4 <vfprintf+0x364>
    12c0:	8b e2       	ldi	r24, 0x2B	; 43
    12c2:	01 c0       	rjmp	.+2      	; 0x12c6 <vfprintf+0x366>
    12c4:	80 e2       	ldi	r24, 0x20	; 32
    12c6:	a7 fc       	sbrc	r10, 7
    12c8:	8d e2       	ldi	r24, 0x2D	; 45
    12ca:	b6 01       	movw	r22, r12
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12d2:	89 14       	cp	r8, r9
    12d4:	38 f4       	brcc	.+14     	; 0x12e4 <vfprintf+0x384>
    12d6:	b6 01       	movw	r22, r12
    12d8:	80 e3       	ldi	r24, 0x30	; 48
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12e0:	9a 94       	dec	r9
    12e2:	f7 cf       	rjmp	.-18     	; 0x12d2 <vfprintf+0x372>
    12e4:	8a 94       	dec	r8
    12e6:	f3 01       	movw	r30, r6
    12e8:	e8 0d       	add	r30, r8
    12ea:	f1 1d       	adc	r31, r1
    12ec:	80 81       	ld	r24, Z
    12ee:	b6 01       	movw	r22, r12
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12f6:	81 10       	cpse	r8, r1
    12f8:	f5 cf       	rjmp	.-22     	; 0x12e4 <vfprintf+0x384>
    12fa:	22 20       	and	r2, r2
    12fc:	09 f4       	brne	.+2      	; 0x1300 <vfprintf+0x3a0>
    12fe:	42 ce       	rjmp	.-892    	; 0xf84 <vfprintf+0x24>
    1300:	b6 01       	movw	r22, r12
    1302:	80 e2       	ldi	r24, 0x20	; 32
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    130a:	2a 94       	dec	r2
    130c:	f6 cf       	rjmp	.-20     	; 0x12fa <vfprintf+0x39a>
    130e:	f6 01       	movw	r30, r12
    1310:	86 81       	ldd	r24, Z+6	; 0x06
    1312:	97 81       	ldd	r25, Z+7	; 0x07
    1314:	02 c0       	rjmp	.+4      	; 0x131a <vfprintf+0x3ba>
    1316:	8f ef       	ldi	r24, 0xFF	; 255
    1318:	9f ef       	ldi	r25, 0xFF	; 255
    131a:	2b 96       	adiw	r28, 0x0b	; 11
    131c:	e2 e1       	ldi	r30, 0x12	; 18
    131e:	0c 94 5d 0a 	jmp	0x14ba	; 0x14ba <__epilogue_restores__>

00001322 <strnlen_P>:
    1322:	fc 01       	movw	r30, r24
    1324:	05 90       	lpm	r0, Z+
    1326:	61 50       	subi	r22, 0x01	; 1
    1328:	70 40       	sbci	r23, 0x00	; 0
    132a:	01 10       	cpse	r0, r1
    132c:	d8 f7       	brcc	.-10     	; 0x1324 <strnlen_P+0x2>
    132e:	80 95       	com	r24
    1330:	90 95       	com	r25
    1332:	8e 0f       	add	r24, r30
    1334:	9f 1f       	adc	r25, r31
    1336:	08 95       	ret

00001338 <strnlen>:
    1338:	fc 01       	movw	r30, r24
    133a:	61 50       	subi	r22, 0x01	; 1
    133c:	70 40       	sbci	r23, 0x00	; 0
    133e:	01 90       	ld	r0, Z+
    1340:	01 10       	cpse	r0, r1
    1342:	d8 f7       	brcc	.-10     	; 0x133a <strnlen+0x2>
    1344:	80 95       	com	r24
    1346:	90 95       	com	r25
    1348:	8e 0f       	add	r24, r30
    134a:	9f 1f       	adc	r25, r31
    134c:	08 95       	ret

0000134e <fputc>:
    134e:	0f 93       	push	r16
    1350:	1f 93       	push	r17
    1352:	cf 93       	push	r28
    1354:	df 93       	push	r29
    1356:	fb 01       	movw	r30, r22
    1358:	23 81       	ldd	r18, Z+3	; 0x03
    135a:	21 fd       	sbrc	r18, 1
    135c:	03 c0       	rjmp	.+6      	; 0x1364 <fputc+0x16>
    135e:	8f ef       	ldi	r24, 0xFF	; 255
    1360:	9f ef       	ldi	r25, 0xFF	; 255
    1362:	2c c0       	rjmp	.+88     	; 0x13bc <fputc+0x6e>
    1364:	22 ff       	sbrs	r18, 2
    1366:	16 c0       	rjmp	.+44     	; 0x1394 <fputc+0x46>
    1368:	46 81       	ldd	r20, Z+6	; 0x06
    136a:	57 81       	ldd	r21, Z+7	; 0x07
    136c:	24 81       	ldd	r18, Z+4	; 0x04
    136e:	35 81       	ldd	r19, Z+5	; 0x05
    1370:	42 17       	cp	r20, r18
    1372:	53 07       	cpc	r21, r19
    1374:	44 f4       	brge	.+16     	; 0x1386 <fputc+0x38>
    1376:	a0 81       	ld	r26, Z
    1378:	b1 81       	ldd	r27, Z+1	; 0x01
    137a:	9d 01       	movw	r18, r26
    137c:	2f 5f       	subi	r18, 0xFF	; 255
    137e:	3f 4f       	sbci	r19, 0xFF	; 255
    1380:	31 83       	std	Z+1, r19	; 0x01
    1382:	20 83       	st	Z, r18
    1384:	8c 93       	st	X, r24
    1386:	26 81       	ldd	r18, Z+6	; 0x06
    1388:	37 81       	ldd	r19, Z+7	; 0x07
    138a:	2f 5f       	subi	r18, 0xFF	; 255
    138c:	3f 4f       	sbci	r19, 0xFF	; 255
    138e:	37 83       	std	Z+7, r19	; 0x07
    1390:	26 83       	std	Z+6, r18	; 0x06
    1392:	14 c0       	rjmp	.+40     	; 0x13bc <fputc+0x6e>
    1394:	8b 01       	movw	r16, r22
    1396:	ec 01       	movw	r28, r24
    1398:	fb 01       	movw	r30, r22
    139a:	00 84       	ldd	r0, Z+8	; 0x08
    139c:	f1 85       	ldd	r31, Z+9	; 0x09
    139e:	e0 2d       	mov	r30, r0
    13a0:	09 95       	icall
    13a2:	89 2b       	or	r24, r25
    13a4:	e1 f6       	brne	.-72     	; 0x135e <fputc+0x10>
    13a6:	d8 01       	movw	r26, r16
    13a8:	16 96       	adiw	r26, 0x06	; 6
    13aa:	8d 91       	ld	r24, X+
    13ac:	9c 91       	ld	r25, X
    13ae:	17 97       	sbiw	r26, 0x07	; 7
    13b0:	01 96       	adiw	r24, 0x01	; 1
    13b2:	17 96       	adiw	r26, 0x07	; 7
    13b4:	9c 93       	st	X, r25
    13b6:	8e 93       	st	-X, r24
    13b8:	16 97       	sbiw	r26, 0x06	; 6
    13ba:	ce 01       	movw	r24, r28
    13bc:	df 91       	pop	r29
    13be:	cf 91       	pop	r28
    13c0:	1f 91       	pop	r17
    13c2:	0f 91       	pop	r16
    13c4:	08 95       	ret

000013c6 <__ultoa_invert>:
    13c6:	fa 01       	movw	r30, r20
    13c8:	aa 27       	eor	r26, r26
    13ca:	28 30       	cpi	r18, 0x08	; 8
    13cc:	51 f1       	breq	.+84     	; 0x1422 <__ultoa_invert+0x5c>
    13ce:	20 31       	cpi	r18, 0x10	; 16
    13d0:	81 f1       	breq	.+96     	; 0x1432 <__ultoa_invert+0x6c>
    13d2:	e8 94       	clt
    13d4:	6f 93       	push	r22
    13d6:	6e 7f       	andi	r22, 0xFE	; 254
    13d8:	6e 5f       	subi	r22, 0xFE	; 254
    13da:	7f 4f       	sbci	r23, 0xFF	; 255
    13dc:	8f 4f       	sbci	r24, 0xFF	; 255
    13de:	9f 4f       	sbci	r25, 0xFF	; 255
    13e0:	af 4f       	sbci	r26, 0xFF	; 255
    13e2:	b1 e0       	ldi	r27, 0x01	; 1
    13e4:	3e d0       	rcall	.+124    	; 0x1462 <__ultoa_invert+0x9c>
    13e6:	b4 e0       	ldi	r27, 0x04	; 4
    13e8:	3c d0       	rcall	.+120    	; 0x1462 <__ultoa_invert+0x9c>
    13ea:	67 0f       	add	r22, r23
    13ec:	78 1f       	adc	r23, r24
    13ee:	89 1f       	adc	r24, r25
    13f0:	9a 1f       	adc	r25, r26
    13f2:	a1 1d       	adc	r26, r1
    13f4:	68 0f       	add	r22, r24
    13f6:	79 1f       	adc	r23, r25
    13f8:	8a 1f       	adc	r24, r26
    13fa:	91 1d       	adc	r25, r1
    13fc:	a1 1d       	adc	r26, r1
    13fe:	6a 0f       	add	r22, r26
    1400:	71 1d       	adc	r23, r1
    1402:	81 1d       	adc	r24, r1
    1404:	91 1d       	adc	r25, r1
    1406:	a1 1d       	adc	r26, r1
    1408:	20 d0       	rcall	.+64     	; 0x144a <__ultoa_invert+0x84>
    140a:	09 f4       	brne	.+2      	; 0x140e <__ultoa_invert+0x48>
    140c:	68 94       	set
    140e:	3f 91       	pop	r19
    1410:	2a e0       	ldi	r18, 0x0A	; 10
    1412:	26 9f       	mul	r18, r22
    1414:	11 24       	eor	r1, r1
    1416:	30 19       	sub	r19, r0
    1418:	30 5d       	subi	r19, 0xD0	; 208
    141a:	31 93       	st	Z+, r19
    141c:	de f6       	brtc	.-74     	; 0x13d4 <__ultoa_invert+0xe>
    141e:	cf 01       	movw	r24, r30
    1420:	08 95       	ret
    1422:	46 2f       	mov	r20, r22
    1424:	47 70       	andi	r20, 0x07	; 7
    1426:	40 5d       	subi	r20, 0xD0	; 208
    1428:	41 93       	st	Z+, r20
    142a:	b3 e0       	ldi	r27, 0x03	; 3
    142c:	0f d0       	rcall	.+30     	; 0x144c <__ultoa_invert+0x86>
    142e:	c9 f7       	brne	.-14     	; 0x1422 <__ultoa_invert+0x5c>
    1430:	f6 cf       	rjmp	.-20     	; 0x141e <__ultoa_invert+0x58>
    1432:	46 2f       	mov	r20, r22
    1434:	4f 70       	andi	r20, 0x0F	; 15
    1436:	40 5d       	subi	r20, 0xD0	; 208
    1438:	4a 33       	cpi	r20, 0x3A	; 58
    143a:	18 f0       	brcs	.+6      	; 0x1442 <__ultoa_invert+0x7c>
    143c:	49 5d       	subi	r20, 0xD9	; 217
    143e:	31 fd       	sbrc	r19, 1
    1440:	40 52       	subi	r20, 0x20	; 32
    1442:	41 93       	st	Z+, r20
    1444:	02 d0       	rcall	.+4      	; 0x144a <__ultoa_invert+0x84>
    1446:	a9 f7       	brne	.-22     	; 0x1432 <__ultoa_invert+0x6c>
    1448:	ea cf       	rjmp	.-44     	; 0x141e <__ultoa_invert+0x58>
    144a:	b4 e0       	ldi	r27, 0x04	; 4
    144c:	a6 95       	lsr	r26
    144e:	97 95       	ror	r25
    1450:	87 95       	ror	r24
    1452:	77 95       	ror	r23
    1454:	67 95       	ror	r22
    1456:	ba 95       	dec	r27
    1458:	c9 f7       	brne	.-14     	; 0x144c <__ultoa_invert+0x86>
    145a:	00 97       	sbiw	r24, 0x00	; 0
    145c:	61 05       	cpc	r22, r1
    145e:	71 05       	cpc	r23, r1
    1460:	08 95       	ret
    1462:	9b 01       	movw	r18, r22
    1464:	ac 01       	movw	r20, r24
    1466:	0a 2e       	mov	r0, r26
    1468:	06 94       	lsr	r0
    146a:	57 95       	ror	r21
    146c:	47 95       	ror	r20
    146e:	37 95       	ror	r19
    1470:	27 95       	ror	r18
    1472:	ba 95       	dec	r27
    1474:	c9 f7       	brne	.-14     	; 0x1468 <__ultoa_invert+0xa2>
    1476:	62 0f       	add	r22, r18
    1478:	73 1f       	adc	r23, r19
    147a:	84 1f       	adc	r24, r20
    147c:	95 1f       	adc	r25, r21
    147e:	a0 1d       	adc	r26, r0
    1480:	08 95       	ret

00001482 <__prologue_saves__>:
    1482:	2f 92       	push	r2
    1484:	3f 92       	push	r3
    1486:	4f 92       	push	r4
    1488:	5f 92       	push	r5
    148a:	6f 92       	push	r6
    148c:	7f 92       	push	r7
    148e:	8f 92       	push	r8
    1490:	9f 92       	push	r9
    1492:	af 92       	push	r10
    1494:	bf 92       	push	r11
    1496:	cf 92       	push	r12
    1498:	df 92       	push	r13
    149a:	ef 92       	push	r14
    149c:	ff 92       	push	r15
    149e:	0f 93       	push	r16
    14a0:	1f 93       	push	r17
    14a2:	cf 93       	push	r28
    14a4:	df 93       	push	r29
    14a6:	cd b7       	in	r28, 0x3d	; 61
    14a8:	de b7       	in	r29, 0x3e	; 62
    14aa:	ca 1b       	sub	r28, r26
    14ac:	db 0b       	sbc	r29, r27
    14ae:	0f b6       	in	r0, 0x3f	; 63
    14b0:	f8 94       	cli
    14b2:	de bf       	out	0x3e, r29	; 62
    14b4:	0f be       	out	0x3f, r0	; 63
    14b6:	cd bf       	out	0x3d, r28	; 61
    14b8:	09 94       	ijmp

000014ba <__epilogue_restores__>:
    14ba:	2a 88       	ldd	r2, Y+18	; 0x12
    14bc:	39 88       	ldd	r3, Y+17	; 0x11
    14be:	48 88       	ldd	r4, Y+16	; 0x10
    14c0:	5f 84       	ldd	r5, Y+15	; 0x0f
    14c2:	6e 84       	ldd	r6, Y+14	; 0x0e
    14c4:	7d 84       	ldd	r7, Y+13	; 0x0d
    14c6:	8c 84       	ldd	r8, Y+12	; 0x0c
    14c8:	9b 84       	ldd	r9, Y+11	; 0x0b
    14ca:	aa 84       	ldd	r10, Y+10	; 0x0a
    14cc:	b9 84       	ldd	r11, Y+9	; 0x09
    14ce:	c8 84       	ldd	r12, Y+8	; 0x08
    14d0:	df 80       	ldd	r13, Y+7	; 0x07
    14d2:	ee 80       	ldd	r14, Y+6	; 0x06
    14d4:	fd 80       	ldd	r15, Y+5	; 0x05
    14d6:	0c 81       	ldd	r16, Y+4	; 0x04
    14d8:	1b 81       	ldd	r17, Y+3	; 0x03
    14da:	aa 81       	ldd	r26, Y+2	; 0x02
    14dc:	b9 81       	ldd	r27, Y+1	; 0x01
    14de:	ce 0f       	add	r28, r30
    14e0:	d1 1d       	adc	r29, r1
    14e2:	0f b6       	in	r0, 0x3f	; 63
    14e4:	f8 94       	cli
    14e6:	de bf       	out	0x3e, r29	; 62
    14e8:	0f be       	out	0x3f, r0	; 63
    14ea:	cd bf       	out	0x3d, r28	; 61
    14ec:	ed 01       	movw	r28, r26
    14ee:	08 95       	ret

000014f0 <_exit>:
    14f0:	f8 94       	cli

000014f2 <__stop_program>:
    14f2:	ff cf       	rjmp	.-2      	; 0x14f2 <__stop_program>
